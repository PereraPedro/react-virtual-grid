{"version":3,"sources":["../src/resizable-cell.jsx"],"names":["ResizableCell","handleColumnResizeStart","widthChange","heightChange","props","onColumnResizeStart","columnIndex","width","handleColumnResize","onColumnResize","handleColumnResizeEnd","onColumnResizeEnd","handleRowResizeStart","onRowResizeStart","rowIndex","height","handleRowResize","onRowResize","handleRowResizeEnd","onRowResizeEnd","renderColumnResizeHandle","renderRowResizeHandle","Component","propTypes","PropTypes","func","number","isRequired"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqBA,a;;;;;;;;;;;;wJA+BnBC,uB,GAA0B,UAACC,WAAD,EAAcC,YAAd,EAA+B;AACvD,UAAI,MAAKC,KAAL,CAAWC,mBAAf,EAAoC;AAClC,cAAKD,KAAL,CAAWC,mBAAX,CAA+B,MAAKD,KAAL,CAAWE,WAA1C,EAAuD,MAAKF,KAAL,CAAWG,KAAX,GAAmBL,WAA1E;AACD;AACF,K,QAEDM,kB,GAAqB,UAACN,WAAD,EAAcC,YAAd,EAA+B;AAClD,UAAI,MAAKC,KAAL,CAAWK,cAAf,EAA+B;AAC7B,cAAKL,KAAL,CAAWK,cAAX,CAA0B,MAAKL,KAAL,CAAWE,WAArC,EAAkD,MAAKF,KAAL,CAAWG,KAAX,GAAmBL,WAArE;AACD;AACF,K,QAEDQ,qB,GAAwB,YAAM;AAC5B,UAAI,MAAKN,KAAL,CAAWO,iBAAf,EAAkC;AAChC,cAAKP,KAAL,CAAWO,iBAAX;AACD;AACF,K,QAEDC,oB,GAAuB,UAACV,WAAD,EAAcC,YAAd,EAA+B;AACpD,UAAI,MAAKC,KAAL,CAAWS,gBAAf,EAAiC;AAC/B,cAAKT,KAAL,CAAWS,gBAAX,CAA4B,MAAKT,KAAL,CAAWU,QAAvC,EAAiD,MAAKV,KAAL,CAAWW,MAAX,GAAoBZ,YAArE;AACD;AACF,K,QAEDa,e,GAAkB,UAACd,WAAD,EAAcC,YAAd,EAA+B;AAC/C,UAAI,MAAKC,KAAL,CAAWa,WAAf,EAA4B;AAC1B,cAAKb,KAAL,CAAWa,WAAX,CAAuB,MAAKb,KAAL,CAAWU,QAAlC,EAA4C,MAAKV,KAAL,CAAWW,MAAX,GAAoBZ,YAAhE;AACD;AACF,K,QAEDe,kB,GAAqB,YAAM;AACzB,UAAI,MAAKd,KAAL,CAAWe,cAAf,EAA+B;AAC7B,cAAKf,KAAL,CAAWe,cAAX;AACD;AACF,K;;;0BAnDDC,wB,uCAA2B;AACzB,WACE,wDAAc,eAAe,KAAKnB,uBAAlC;AACc,gBAAU,KAAKO,kBAD7B;AAEc,mBAAa,KAAKE,qBAFhC,GADF;AAKD,G;;0BAEDW,qB,oCAAwB;AACtB,WACE,wDAAc,eAAe,KAAKT,oBAAlC;AACc,gBAAU,KAAKI,eAD7B;AAEc,mBAAa,KAAKE,kBAFhC;AAGc,iBAAU,QAHxB,GADF;AAMD,G;;;EA7BwC,gBAAMI,S;;AAA5BtB,a,CACZuB,S,GAAY;AACjBlB,uBAAqB,gBAAMmB,SAAN,CAAgBC,IADpB;AAEjBhB,kBAAgB,gBAAMe,SAAN,CAAgBC,IAFf;AAGjBd,qBAAmB,gBAAMa,SAAN,CAAgBC,IAHlB;AAIjBZ,oBAAkB,gBAAMW,SAAN,CAAgBC,IAJjB;AAKjBR,eAAa,gBAAMO,SAAN,CAAgBC,IALZ;AAMjBN,kBAAgB,gBAAMK,SAAN,CAAgBC,IANf;AAOjBlB,SAAO,gBAAMiB,SAAN,CAAgBE,MAAhB,CAAuBC,UAPb;AAQjBZ,UAAQ,gBAAMS,SAAN,CAAgBE,MAAhB,CAAuBC,UARd;AASjBb,YAAU,gBAAMU,SAAN,CAAgBE,MAAhB,CAAuBC,UAThB;AAUjBrB,eAAa,gBAAMkB,SAAN,CAAgBE,MAAhB,CAAuBC;AAVnB,C;kBADA3B,a","file":"resizable-cell.js","sourcesContent":["import React from 'react';\nimport ResizeHandle from './resize-handle';\n\nexport default class ResizableCell extends React.Component {\n  static propTypes = {\n    onColumnResizeStart: React.PropTypes.func,\n    onColumnResize: React.PropTypes.func,\n    onColumnResizeEnd: React.PropTypes.func,\n    onRowResizeStart: React.PropTypes.func,\n    onRowResize: React.PropTypes.func,\n    onRowResizeEnd: React.PropTypes.func,\n    width: React.PropTypes.number.isRequired,\n    height: React.PropTypes.number.isRequired,\n    rowIndex: React.PropTypes.number.isRequired,\n    columnIndex: React.PropTypes.number.isRequired\n  };\n\n  renderColumnResizeHandle() {\n    return (\n      <ResizeHandle onResizeStart={this.handleColumnResizeStart}\n                    onResize={this.handleColumnResize}\n                    onResizeEnd={this.handleColumnResizeEnd} />\n    );\n  }\n\n  renderRowResizeHandle() {\n    return (\n      <ResizeHandle onResizeStart={this.handleRowResizeStart}\n                    onResize={this.handleRowResize}\n                    onResizeEnd={this.handleRowResizeEnd}\n                    dimension=\"height\" />\n    );\n  }\n\n  handleColumnResizeStart = (widthChange, heightChange) => {\n    if (this.props.onColumnResizeStart) {\n      this.props.onColumnResizeStart(this.props.columnIndex, this.props.width + widthChange);\n    }\n  }\n\n  handleColumnResize = (widthChange, heightChange) => {\n    if (this.props.onColumnResize) {\n      this.props.onColumnResize(this.props.columnIndex, this.props.width + widthChange);\n    }\n  }\n\n  handleColumnResizeEnd = () => {\n    if (this.props.onColumnResizeEnd) {\n      this.props.onColumnResizeEnd();\n    }\n  }\n\n  handleRowResizeStart = (widthChange, heightChange) => {\n    if (this.props.onRowResizeStart) {\n      this.props.onRowResizeStart(this.props.rowIndex, this.props.height + heightChange);\n    }\n  }\n\n  handleRowResize = (widthChange, heightChange) => {\n    if (this.props.onRowResize) {\n      this.props.onRowResize(this.props.rowIndex, this.props.height + heightChange);\n    }\n  }\n\n  handleRowResizeEnd = () => {\n    if (this.props.onRowResizeEnd) {\n      this.props.onRowResizeEnd();\n    }\n  }\n}\n"]}