{"version":3,"sources":["../src/grid.jsx"],"names":[],"mappings":"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","file":"grid.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport GridCalculator from './grid-calculator';\nimport elementResizeDetector from 'element-resize-detector';\n\nconst POINTER_EVENTS_SCROLL_DELAY = 200;\n\nexport default class Grid extends React.Component {\n  static propTypes = {\n    preloadPixelsX: React.PropTypes.number,\n\n    preloadPixelsY: React.PropTypes.number,\n\n    estimatedRowHeight: React.PropTypes.number,\n\n    estimatedColumnWidth: React.PropTypes.number,\n\n    columnCount: React.PropTypes.number.isRequired,\n\n    rowCount: React.PropTypes.number.isRequired,\n\n    fixedColumnCount: React.PropTypes.number,\n\n    fixedHeaderCount: React.PropTypes.number,\n\n    columnWidth: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    rowHeight: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    renderCell: React.PropTypes.func,\n\n    onExtentsChange: React.PropTypes.func,\n\n    resizableColumns: React.PropTypes.bool,\n\n    resizableRows: React.PropTypes.bool\n  };\n\n  static defaultProps = {\n    preloadPixelsX: 0,\n    preloadPixelsY: 0,\n    estimatedColumnWidth: 130,\n    estimatedRowHeight: 30,\n    resizableColumns: true,\n    resizableRows: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._pinnedColumnWidths = {};\n    this._pinnedRowHeights = {};\n\n    this._sizeDetector = elementResizeDetector({strategy: 'scroll'});\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._sizeDetector.listenTo(this._root, this.handleResize);\n    this._scrollInner.addEventListener('scroll', this.handleScroll);\n    this._root.addEventListener('wheel', this.handleWheel);\n\n    this.update(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._sizeDetector.uninstall(this._root);\n    this._scrollInner.removeEventListener('scroll', this.handleScroll);\n    this._root.removeEventListener('wheel', this.handleWheel);\n  }\n\n  render() {\n    const {styles} = Grid;\n\n    const contentStyle = {\n      ...styles.scrollContent,\n      width: this.scrollableWidth,\n      height: this.scrollableHeight\n    };\n\n    return (\n      <div style={styles.container}\n           ref={this.bindRoot}\n           onMouseMove={this.handleRootMouseMove}>\n        <div style={styles.gridBody}>\n          {this.renderLeftPane()}\n          {this.renderRightPane()}\n        </div>\n        <div style={styles.scrollOverlay}\n             ref={this.bindScrollOverlay}>\n          <div style={styles.scrollContainer}\n               ref={this.bindScrollInner}>\n            <div className={cx(styles.scrollContent)}\n                 style={contentStyle}>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: this.fixedColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindLeftPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderLeftPaneHeader()}\n        {this.renderLeftPaneBody()}\n      </div>\n    );\n  }\n\n  renderLeftPaneHeader() {\n    if (!this.state.cells || this.props.fixedColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    return (\n      <div ref={this.bindLeftPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, 0, this.props.fixedColumnCount - 1, this.state.cells.topLeftRows, this.state.cells.topLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneBody() {\n    if (!this.state.cells || this.props.fixedColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: 0\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      top: -this.fixedHeadersHeight\n    };\n\n    const fromRow = this.state.cells.leftRows[0][0];\n    const toRow = this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0];\n\n    return (\n      <div ref={this.bindLeftPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedColumnCount - 1, this.state.cells.leftRows, this.state.cells.leftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: this.fixedColumnsWidth,\n      top: 0,\n      bottom: 0,\n      right: 0\n    };\n\n    return (\n      <div ref={this.bindRightPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderRightPaneHeader()}\n        {this.renderRightPaneBody()}\n      </div>\n    );\n  }\n\n  renderRightPaneHeader() {\n    if (!this.state.cells || this.props.fixedHeaderCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedColumnsWidth\n    };\n\n    const fromColumn = this.state.cells.topColumns[0][0];\n    const toColumn = this.state.cells.topColumns[this.state.cells.topColumns.length - 1][0];\n\n    return (\n      <div ref={this.bindRightPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRows, this.state.cells.topColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneBody() {\n    if (!this.state.cells) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: 0\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      left: -this.fixedColumnsWidth,\n      top: -this.fixedHeadersHeight\n    };\n\n    const fromRow = this.state.cells.rows[0][0];\n    const toRow = this.state.cells.rows[this.state.cells.rows.length - 1][0];\n\n    const fromColumn = this.state.cells.columns[0][0];\n    const toColumn = this.state.cells.columns[this.state.cells.columns.length - 1][0];\n\n    return (\n      <div ref={this.bindRightPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rows, this.state.cells.columns)}\n        </div>\n      </div>\n    );\n  }\n\n  get scrollableWidth() {\n    if (!this.state.cells || !this.state.cells.columns.length) {\n      return this.props.estimatedColumnWidth * this.props.columnCount;\n    }\n\n    const lastColumn = this.state.cells.columns[this.state.cells.columns.length - 1];\n    const width = lastColumn[1] + lastColumn[2];\n\n    return width + ((this.props.columnCount - lastColumn[0] - 1) * this.props.estimatedColumnWidth);\n  }\n\n  get scrollableHeight() {\n    if (!this.state.cells || !this.state.cells.rows.length) {\n      return this.props.estimatedRowHeight * this.props.rowCount;\n    }\n\n    const lastRow = this.state.cells.rows[this.state.cells.rows.length - 1];\n    const height = lastRow[1] + lastRow[2];\n\n    return height + ((this.props.rowCount - lastRow[0] - 1) * this.props.estimatedRowHeight);\n  }\n\n  get fixedHeadersHeight() {\n    if (!this.state.cells || !this.state.cells.topLeftRows.length) {\n      return 0;\n    }\n\n    const lastTopLeftRow = this.state.cells.topLeftRows[this.state.cells.topLeftRows.length - 1];\n    const topOffset = lastTopLeftRow[1] + lastTopLeftRow[2];\n\n    return topOffset;\n  }\n\n  get fixedColumnsWidth() {\n    if (!this.state.cells || !this.state.cells.leftColumns.length) {\n      return 0;\n    }\n\n    const lastLeftColumn = this.state.cells.leftColumns[this.state.cells.leftColumns.length - 1];\n    const leftOffset = lastLeftColumn[1] + lastLeftColumn[2];\n\n    return leftOffset;\n  }\n\n  get scrollbarSize() {\n    if (this._scrollbarSize == null) {\n      this._scrollbarSize = Math.max(15, this._scrollInner.offsetHeight - this._scrollInner.clientHeight);\n    }\n\n    return this._scrollbarSize;\n  }\n\n  isOverScrollbar(x, y) {\n    const scrollbarSize = this.scrollbarSize;\n\n    return (x >= this._root.offsetWidth - scrollbarSize) || (y >= this._root.offsetHeight - scrollbarSize);\n  }\n\n  handleRootMouseMove = (event) => {\n    const isOverScrollbar = this.isOverScrollbar(event.clientX, event.clientY);\n\n    // when the mouse moves between the 2 regions, swap the pointer events\n    if (this._isOverScrollbar !== isOverScrollbar) {\n      if (isOverScrollbar) {\n        // when over the scrollbar area, enable the pointer events on the scroll area\n        this.enableScrollableAreaPointerEvents();\n      } else {\n        // when over the grid area, disable the pointer events on the scroll area so the cells are interactive\n        this.disableScrollableAreaPointerEventsSoon();\n      }\n    }\n\n    this._isOverScrollbar = isOverScrollbar;\n  }\n\n  enableScrollableAreaPointerEvents() {\n    clearTimeout(this._disableScrollableAreaPointerEventsDelay);\n    this._disableScrollableAreaPointerEventsDelay = null;\n\n    this._scrollOverlay.style.pointerEvents = 'auto';\n  }\n\n  disableScrollableAreaPointerEventsSoon() {\n    clearTimeout(this._disableScrollableAreaPointerEventsDelay);\n\n    this._disableScrollableAreaPointerEventsDelay = setTimeout(() => {\n      this._disableScrollableAreaPointerEventsDelay = null;\n\n      if (!this._isOverScrollbar) {\n        this.disableScrollableAreaPointerEventsNow();\n      }\n    }, POINTER_EVENTS_SCROLL_DELAY);\n  }\n\n  get isScrolling() {\n    return this._disableScrollableAreaPointerEventsDelay != null;\n  }\n\n  disableScrollableAreaPointerEventsNow() {\n    this._scrollOverlay.style.pointerEvents = 'none';\n  }\n\n  bindRoot = (node) => {\n    this._root = node;\n  }\n\n  bindScrollOverlay = (node) => {\n    this._scrollOverlay = node;\n  }\n\n  bindScrollInner = (node) => {\n    this._scrollInner = node;\n  }\n\n  bindLeftPane = (node) => {\n    this._leftPane = node;\n  }\n\n  bindLeftPaneHeader = (node) => {\n    this._leftPaneHeader = node;\n  }\n\n  bindLeftPaneBody = (node) => {\n    this._leftPaneBody = node;\n  }\n\n  bindRightPane = (node) => {\n    this._rightPane = node;\n  }\n\n  bindRightPaneHeader = (node) => {\n    this._rightPaneHeader = node;\n  }\n\n  bindRightPaneBody = (node) => {\n    this._rightPaneBody = node;\n  }\n\n  handleResize = (event) => {\n    const {scrollTop, scrollLeft} = this._scrollInner;\n\n    this.update(scrollTop, scrollLeft);\n  }\n\n  handleScroll = (event) => {\n    const {scrollTop, scrollLeft} = event.target;\n\n    this.update(scrollTop, scrollLeft);\n  }\n\n  handleWheel = (event) => {\n    if (!this.isScrolling) {\n      this.enableScrollableAreaPointerEvents();\n      event.preventDefault();\n    }\n\n    this.disableScrollableAreaPointerEventsSoon();\n  }\n\n  handleColumnResize = (column, width) => {\n    this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResize = (row, height) => {\n    this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  invalidateSizes() {\n    this.calculator.invalidate();\n  }\n\n  refresh = () => {\n    const {scrollTop, scrollLeft} = this._scrollInner;\n\n    this.update(scrollTop, scrollLeft);\n  }\n\n  update(scrollTop, scrollLeft) {\n    const x = scrollLeft - this.props.preloadPixelsX;\n    const y = scrollTop - this.props.preloadPixelsY;\n\n    const bounds = {\n      left: Math.max(0, x),\n      top: Math.max(0, y),\n      width: this._root.clientWidth + (2 * this.props.preloadPixelsX) + (x < 0 ? x : 0),\n      height: this._root.clientHeight + (2 * this.props.preloadPixelsY) + (y < 0 ? y : 0)\n    };\n\n    const cells = this.calculator.cellsWithinBounds(bounds, this.props.rowCount, this.props.columnCount);\n\n    if (cells.changed) {\n      const fromRow = cells.rows[0][0];\n      const toRow = cells.rows[cells.rows.length - 1][0];\n      const fromColumn = cells.columns[0][0];\n      const toColumn = cells.columns[cells.columns.length - 1][0];\n\n      if (this.props.onExtentsChange) {\n        this.props.onExtentsChange(fromRow, toRow, fromColumn, toColumn);\n      }\n\n      this.setState({cells: cells});\n    }\n\n    if (this.state.cells) {\n      this.setScroll(scrollLeft, scrollTop);\n    }\n  }\n\n  setScroll(x, y) {\n    if (this._leftPaneBody) {\n      this._leftPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._rightPaneHeader) {\n      this._rightPaneHeader.childNodes[0].style.left = (-x - this.fixedColumnsWidth) + 'px';\n    }\n\n    this._rightPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    this._rightPaneBody.childNodes[0].style.left = (-x - this.fixedColumnsWidth) + 'px';\n  }\n\n  get calculator() {\n    if (!this._calculator) {\n      this._calculator = new GridCalculator();\n      this._calculator.estimatedColumnWidth = this.props.estimatedColumnWidth;\n      this._calculator.estimatedRowHeight = this.props.estimatedRowHeight;\n      this._calculator.fixedColumnCount = this.props.fixedColumnCount;\n      this._calculator.fixedHeaderCount = this.props.fixedHeaderCount;\n      this._calculator.calculateRowHeight = this.calculateRowHeight;\n      this._calculator.calculateColumnWidth = this.calculateColumnWidth;\n    }\n\n    return this._calculator;\n  }\n\n  calculateRowHeight = (row) => {\n    if (this._pinnedRowHeights[row] != null) {\n      return this._pinnedRowHeights[row];\n    }\n\n    return this.props.rowHeight(row);\n  }\n\n  calculateColumnWidth = (column) => {\n    if (this._pinnedColumnWidths[column] != null) {\n      return this._pinnedColumnWidths[column];\n    }\n\n    return this.props.columnWidth(column);\n  }\n\n  renderCellRange(fromRow, toRow, fromColumn, toColumn, rows, columns) {\n    const cells = [];\n\n    const render = this.props.renderCell;\n\n    // for (let row = fromRow; row <= toRow; ++row) {\n    //   for (let column = fromColumn; column <= toColumn; ++column) {\n    for (let row = toRow; row >= fromRow; --row) {\n      for (let column = toColumn; column >= fromColumn; --column) {\n        const rowData = rows[row - fromRow];\n        const columnData = columns[column - fromColumn];\n\n        cells.push(render(row, rowData, column, columnData, this));\n      }\n    }\n\n    return cells;\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n    // zIndex: 2\n  },\n\n  scrollOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    // zIndex: 2,\n    overflow: 'hidden',\n    pointerEvents: 'none'\n  },\n\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'scroll',\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  gridBody: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  pane: {\n    position: 'absolute',\n    overflow: 'hidden'\n  }\n};\n\nGrid.styles = styles;\n"]}