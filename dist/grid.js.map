{"version":3,"sources":["../src/grid.jsx"],"names":["POINTER_EVENTS_SCROLL_DELAY","Grid","props","handleRootMouseMove","event","position","elementPosition","currentTarget","x","clientX","left","y","clientY","top","isOverScrollbar","_isOverScrollbar","enableScrollableAreaPointerEvents","disableScrollableAreaPointerEventsSoon","bindRoot","node","_root","bindScrollOverlay","_scrollOverlay","bindScrollInner","_scrollInner","bindLeftPane","_leftPane","bindLeftPaneHeader","_leftPaneHeader","bindLeftPaneFooter","_leftPaneFooter","bindLeftPaneBody","_leftPaneBody","bindRightPane","_rightPane","bindRightPaneHeader","_rightPaneHeader","bindRightPaneFooter","_rightPaneFooter","bindRightPaneBody","_rightPaneBody","bindCenterPane","_centerPane","bindCenterPaneHeader","_centerPaneHeader","bindCenterPaneFooter","_centerPaneFooter","bindCenterPaneBody","_centerPaneBody","handleResize","scrollTop","scrollLeft","update","handleScroll","target","handleWheel","isScrolling","preventDefault","handleColumnResizeStart","column","width","_resizingColumn","invalidateSizes","refresh","handleColumnResize","_pinnedColumnWidths","Math","min","max","handleColumnResizeEnd","handleRowResizeStart","row","height","_resizingRow","handleRowResize","_pinnedRowHeights","handleRowResizeEnd","force","calculateRowHeight","rowHeight","calculateColumnWidth","columnWidth","_sizeDetector","strategy","state","componentDidMount","listenTo","addEventListener","componentWillUnmount","uninstall","removeEventListener","render","styles","contentStyle","scrollContent","scrollableWidth","scrollableHeight","container","gridBody","renderLeftPane","renderRightPane","renderCenterPane","renderColumnResizeGuide","renderRowResizeGuide","scrollOverlay","scrollContainer","attrs","pane","bottom","fixedLeftColumnsWidth","renderLeftPaneHeader","renderLeftPaneFooter","renderLeftPaneBody","cells","fixedLeftColumnCount","right","fixedHeadersHeight","leftPaneHeaderContent","renderCellRange","fixedHeaderCount","topLeftRows","topLeftColumns","fixedFooterCount","fixedFootersHeight","fromRow","rowCount","toRow","leftPaneFooterContent","bottomLeftRows","bottomLeftColumns","estimatedColumnWidth","estimatedRowHeight","leftRows","length","leftPaneBodyContent","leftColumns","fixedRightColumnCount","fixedRightColumnsWidth","renderRightPaneHeader","renderRightPaneFooter","renderRightPaneBody","fromColumn","columnCount","toColumn","rightPaneHeaderContent","topRightRows","topRightColumns","rightPaneFooterContent","bottomRightRows","bottomRightColumns","rightPaneBodyContent","rightRows","rightColumns","renderCenterPaneHeader","renderCenterPaneFooter","renderCenterPaneBody","overflow","topColumns","centerPaneHeaderContent","topRows","bottomColumns","bottomRows","rows","columns","centerPaneBodyContent","find","cell","guideStyle","columnResizeGuide","rowResizeGuide","el","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","scrollbarSize","offsetWidth","offsetHeight","clearTimeout","_disableScrollableAreaPointerEventsDelay","style","pointerEvents","setTimeout","disableScrollableAreaPointerEventsNow","calculator","invalidate","preloadPixelsX","preloadPixelsY","bounds","clientWidth","clientHeight","cellsWithinBounds","changed","onExtentsChange","setState","setScroll","childNodes","renderCell","rowData","columnData","push","lastColumn","lastRow","lastTopLeftRow","topOffset","lastBottomRow","lastBottomRowTop","lastOffset","_scrollbarSize","_calculator","Component","propTypes","PropTypes","number","isRequired","oneOfType","func","defaultProps","WebkitOverflowScrolling","backgroundColor","cursor","borderRadius"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,8BAA8B,GAApC;;IAEqBC,I;;;AA0CnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAAA,UAglBnBC,mBAhlBmB,GAglBG,UAACC,KAAD,EAAW;AAC/B,UAAMC,WAAW,MAAKC,eAAL,CAAqBF,MAAMG,aAA3B,CAAjB;;AAEA,UAAMC,IAAIJ,MAAMK,OAAN,GAAgBJ,SAASK,IAAnC;AACA,UAAMC,IAAIP,MAAMQ,OAAN,GAAgBP,SAASQ,GAAnC;;AAEA,UAAMC,kBAAkB,MAAKA,eAAL,CAAqBN,CAArB,EAAwBG,CAAxB,CAAxB;;AAEA;AACA,UAAI,MAAKI,gBAAL,KAA0BD,eAA9B,EAA+C;AAC7C,YAAIA,eAAJ,EAAqB;AACnB;AACA,gBAAKE,iCAAL;AACD,SAHD,MAGO;AACL;AACA,gBAAKC,sCAAL;AACD;AACF;;AAED,YAAKF,gBAAL,GAAwBD,eAAxB;AACD,KApmBkB;;AAAA,UAioBnBI,QAjoBmB,GAioBR,UAACC,IAAD,EAAU;AACnB,YAAKC,KAAL,GAAaD,IAAb;AACD,KAnoBkB;;AAAA,UAqoBnBE,iBAroBmB,GAqoBC,UAACF,IAAD,EAAU;AAC5B,YAAKG,cAAL,GAAsBH,IAAtB;AACD,KAvoBkB;;AAAA,UAyoBnBI,eAzoBmB,GAyoBD,UAACJ,IAAD,EAAU;AAC1B,YAAKK,YAAL,GAAoBL,IAApB;AACD,KA3oBkB;;AAAA,UA6oBnBM,YA7oBmB,GA6oBJ,UAACN,IAAD,EAAU;AACvB,YAAKO,SAAL,GAAiBP,IAAjB;AACD,KA/oBkB;;AAAA,UAipBnBQ,kBAjpBmB,GAipBE,UAACR,IAAD,EAAU;AAC7B,YAAKS,eAAL,GAAuBT,IAAvB;AACD,KAnpBkB;;AAAA,UAqpBnBU,kBArpBmB,GAqpBE,UAACV,IAAD,EAAU;AAC7B,YAAKW,eAAL,GAAuBX,IAAvB;AACD,KAvpBkB;;AAAA,UAypBnBY,gBAzpBmB,GAypBA,UAACZ,IAAD,EAAU;AAC3B,YAAKa,aAAL,GAAqBb,IAArB;AACD,KA3pBkB;;AAAA,UA6pBnBc,aA7pBmB,GA6pBH,UAACd,IAAD,EAAU;AACxB,YAAKe,UAAL,GAAkBf,IAAlB;AACD,KA/pBkB;;AAAA,UAiqBnBgB,mBAjqBmB,GAiqBG,UAAChB,IAAD,EAAU;AAC9B,YAAKiB,gBAAL,GAAwBjB,IAAxB;AACD,KAnqBkB;;AAAA,UAqqBnBkB,mBArqBmB,GAqqBG,UAAClB,IAAD,EAAU;AAC9B,YAAKmB,gBAAL,GAAwBnB,IAAxB;AACD,KAvqBkB;;AAAA,UAyqBnBoB,iBAzqBmB,GAyqBC,UAACpB,IAAD,EAAU;AAC5B,YAAKqB,cAAL,GAAsBrB,IAAtB;AACD,KA3qBkB;;AAAA,UA6qBnBsB,cA7qBmB,GA6qBF,UAACtB,IAAD,EAAU;AACzB,YAAKuB,WAAL,GAAmBvB,IAAnB;AACD,KA/qBkB;;AAAA,UAirBnBwB,oBAjrBmB,GAirBI,UAACxB,IAAD,EAAU;AAC/B,YAAKyB,iBAAL,GAAyBzB,IAAzB;AACD,KAnrBkB;;AAAA,UAqrBnB0B,oBArrBmB,GAqrBI,UAAC1B,IAAD,EAAU;AAC/B,YAAK2B,iBAAL,GAAyB3B,IAAzB;AACD,KAvrBkB;;AAAA,UAyrBnB4B,kBAzrBmB,GAyrBE,UAAC5B,IAAD,EAAU;AAC7B,YAAK6B,eAAL,GAAuB7B,IAAvB;AACD,KA3rBkB;;AAAA,UA6rBnB8B,YA7rBmB,GA6rBJ,UAAC7C,KAAD,EAAW;AAAA,+BACQ,MAAKoB,YADb;AAAA,UACjB0B,SADiB,sBACjBA,SADiB;AAAA,UACNC,UADM,sBACNA,UADM;;;AAGxB,YAAKC,MAAL,CAAYF,SAAZ,EAAuBC,UAAvB;AACD,KAjsBkB;;AAAA,UAmsBnBE,YAnsBmB,GAmsBJ,UAACjD,KAAD,EAAW;AAAA,0BACQA,MAAMkD,MADd;AAAA,UACjBJ,SADiB,iBACjBA,SADiB;AAAA,UACNC,UADM,iBACNA,UADM;;;AAGxB,YAAKC,MAAL,CAAYF,SAAZ,EAAuBC,UAAvB;AACD,KAvsBkB;;AAAA,UAysBnBI,WAzsBmB,GAysBL,UAACnD,KAAD,EAAW;AACvB,UAAI,CAAC,MAAKoD,WAAV,EAAuB;AACrB,cAAKxC,iCAAL;AACAZ,cAAMqD,cAAN;AACD;;AAED,YAAKxC,sCAAL;AACD,KAhtBkB;;AAAA,UAktBnByC,uBAltBmB,GAktBO,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC3C,YAAKC,eAAL,GAAuBF,MAAvB;;AAEA;AACA,YAAKG,eAAL;AACA,YAAKC,OAAL;AACD,KAxtBkB;;AAAA,UA0tBnBC,kBA1tBmB,GA0tBE,UAACL,MAAD,EAASC,KAAT,EAAmB;AACtC,YAAKK,mBAAL,CAAyBN,MAAzB,IAAmCO,KAAKC,GAAL,CAAS,KAAT,EAAgBD,KAAKE,GAAL,CAAS,EAAT,EAAaR,KAAb,CAAhB,CAAnC;AACA,YAAKE,eAAL;AACA,YAAKC,OAAL;AACD,KA9tBkB;;AAAA,UAguBnBM,qBAhuBmB,GAguBK,YAAM;AAC5B,YAAKR,eAAL,GAAuB,IAAvB;;AAEA,YAAKC,eAAL;AACA,YAAKC,OAAL;AACD,KAruBkB;;AAAA,UAuuBnBO,oBAvuBmB,GAuuBI,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACtC,YAAKC,YAAL,GAAoBF,GAApB;;AAEA;AACA,YAAKT,eAAL;AACA,YAAKC,OAAL;AACD,KA7uBkB;;AAAA,UA+uBnBW,eA/uBmB,GA+uBD,UAACH,GAAD,EAAMC,MAAN,EAAiB;AACjC,YAAKG,iBAAL,CAAuBJ,GAAvB,IAA8BL,KAAKC,GAAL,CAAS,KAAT,EAAgBD,KAAKE,GAAL,CAAS,EAAT,EAAaI,MAAb,CAAhB,CAA9B;AACA,YAAKV,eAAL;AACA,YAAKC,OAAL;AACD,KAnvBkB;;AAAA,UAqvBnBa,kBArvBmB,GAqvBE,YAAM;AACzB,YAAKH,YAAL,GAAoB,IAApB;;AAEA,YAAKX,eAAL;AACA,YAAKC,OAAL;AACD,KA1vBkB;;AAAA,UAgwBnBA,OAhwBmB,GAgwBT,UAACc,KAAD,EAAW;AAAA,gCACa,MAAKrD,YADlB;AAAA,UACZ0B,SADY,uBACZA,SADY;AAAA,UACDC,UADC,uBACDA,UADC;;;AAGnB,YAAKC,MAAL,CAAYF,SAAZ,EAAuBC,UAAvB,EAAmC0B,KAAnC;AACD,KApwBkB;;AAAA,UA00BnBC,kBA10BmB,GA00BE,UAACP,GAAD,EAAS;AAC5B,UAAI,MAAKI,iBAAL,CAAuBJ,GAAvB,KAA+B,IAAnC,EAAyC;AACvC,eAAO,MAAKI,iBAAL,CAAuBJ,GAAvB,CAAP;AACD;;AAED,aAAO,MAAKrE,KAAL,CAAW6E,SAAX,CAAqBR,GAArB,CAAP;AACD,KAh1BkB;;AAAA,UAk1BnBS,oBAl1BmB,GAk1BI,UAACrB,MAAD,EAAY;AACjC,UAAI,MAAKM,mBAAL,CAAyBN,MAAzB,KAAoC,IAAxC,EAA8C;AAC5C,eAAO,MAAKM,mBAAL,CAAyBN,MAAzB,CAAP;AACD;;AAED,aAAO,MAAKzD,KAAL,CAAW+E,WAAX,CAAuBtB,MAAvB,CAAP;AACD,KAx1BkB;;AAGjB,UAAKM,mBAAL,GAA2B,EAA3B;AACA,UAAKU,iBAAL,GAAyB,EAAzB;;AAEA,UAAKO,aAAL,GAAqB,qCAAsB,EAACC,UAAU,QAAX,EAAtB,CAArB;;AAEA,UAAKC,KAAL,GAAa,EAAb;AARiB;AASlB;;iBAEDC,iB,gCAAoB;AAClB,SAAKH,aAAL,CAAmBI,QAAnB,CAA4B,KAAKlE,KAAjC,EAAwC,KAAK6B,YAA7C;AACA,SAAKzB,YAAL,CAAkB+D,gBAAlB,CAAmC,QAAnC,EAA6C,KAAKlC,YAAlD;AACA,SAAKjC,KAAL,CAAWmE,gBAAX,CAA4B,OAA5B,EAAqC,KAAKhC,WAA1C;;AAEA,SAAKH,MAAL,CAAY,CAAZ,EAAe,CAAf;AACD,G;;iBAEDoC,oB,mCAAuB;AACrB,SAAKN,aAAL,CAAmBO,SAAnB,CAA6B,KAAKrE,KAAlC;AACA,SAAKI,YAAL,CAAkBkE,mBAAlB,CAAsC,QAAtC,EAAgD,KAAKrC,YAArD;AACA,SAAKjC,KAAL,CAAWsE,mBAAX,CAA+B,OAA/B,EAAwC,KAAKnC,WAA7C;AACD,G;;iBAEDoC,M,qBAAS;AAAA,QACAC,MADA,GACU3F,IADV,CACA2F,MADA;;;AAGP,QAAMC,4BACDD,OAAOE,aADN;AAEJlC,aAAO,KAAKmC,eAFR;AAGJvB,cAAQ,KAAKwB;AAHT,MAAN;;AAMA,WACE;AAAA;AAAA,QAAK,OAAOJ,OAAOK,SAAnB;AACK,aAAK,KAAK/E,QADf;AAEK,qBAAa,KAAKf,mBAFvB;AAGE;AAAA;AAAA,UAAK,OAAOyF,OAAOM,QAAnB;AACG,aAAKC,cAAL,EADH;AAEG,aAAKC,eAAL,EAFH;AAGG,aAAKC,gBAAL,EAHH;AAIG,aAAKC,uBAAL,EAJH;AAKG,aAAKC,oBAAL;AALH,OAHF;AAUE;AAAA;AAAA,UAAK,OAAOX,OAAOY,aAAnB;AACK,eAAK,KAAKnF,iBADf;AAEE;AAAA;AAAA,YAAK,OAAOuE,OAAOa,eAAnB;AACK,iBAAK,KAAKlF,eADf;AAEE,iDAAK,WAAW,0BAAG,kBAAH,EAAuBqE,OAAOE,aAA9B,CAAhB;AACK,mBAAOD,YADZ;AAFF;AAFF;AAVF,KADF;AAqBD,G;;iBAEDM,c,6BAAiB;AAAA,QACRP,MADQ,GACE3F,IADF,CACR2F,MADQ;;;AAGf,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,CAHD;AAIJ+F,cAAQ,CAJJ;AAKJhD,aAAO,KAAKiD;AALR,MAAN;;AAQA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKpF,YAAf;AACK,mBAAW,2BADhB;AAEK,eAAOiF,KAFZ;AAGG,WAAKI,oBAAL,EAHH;AAIG,WAAKC,oBAAL,EAJH;AAKG,WAAKC,kBAAL;AALH,KADF;AASD,G;;iBAEDF,oB,mCAAuB;AACrB,QAAI,CAAC,KAAK1B,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWgH,oBAAX,GAAkC,CAA3D,EAA8D;AAC5D,aAAO,IAAP;AACD;;AAHoB,QAKdtB,MALc,GAKJ3F,IALI,CAKd2F,MALc;;;AAOrB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,CAHD;AAIJsG,aAAO,CAJH;AAKJ3C,cAAQ,KAAK4C;AALT,MAAN;;AAQA,QAAMvB,eAAe,EAArB;;AAGA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKlE,kBAAf;AACK,mBAAW,2BADhB;AAEK,eAAO+E,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOyB,qBAAV,CAAhB;AACK,iBAAOxB,YADZ;AAEG,aAAKyB,eAAL,CAAqB,CAArB,EAAwB,KAAKpH,KAAL,CAAWqH,gBAAX,GAA8B,CAAtD,EAAyD,CAAzD,EAA4D,KAAKrH,KAAL,CAAWgH,oBAAX,GAAkC,CAA9F,EAAiG,KAAK9B,KAAL,CAAW6B,KAAX,CAAiBO,WAAlH,EAA+H,KAAKpC,KAAL,CAAW6B,KAAX,CAAiBQ,cAAhJ;AAFH;AAHF,KADF;AAUD,G;;iBAEDV,oB,mCAAuB;AACrB,QAAI,CAAC,KAAK3B,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWgH,oBAAX,GAAkC,CAAvD,IAA4D,KAAKhH,KAAL,CAAWwH,gBAAX,GAA8B,CAA9F,EAAiG;AAC/F,aAAO,IAAP;AACD;;AAHoB,QAKd9B,MALc,GAKJ3F,IALI,CAKd2F,MALc;;;AAOrB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJkG,cAAQ,CAHJ;AAIJO,aAAO,CAJH;AAKJ3C,cAAQ,KAAKmD;AALT,MAAN;;AAQA,QAAM9B,eAAe,EAArB;;AAGA,QAAM+B,UAAU,KAAK1H,KAAL,CAAW2H,QAAX,GAAsB,CAAtB,GAA0B,KAAK3H,KAAL,CAAW2H,QAAX,GAAsB,KAAK3H,KAAL,CAAWwH,gBAA3D,GAA8E,CAA9F;AACA,QAAMI,QAAQF,UAAUA,UAAU,KAAK1H,KAAL,CAAWwH,gBAArB,GAAwC,CAAlD,GAAsD,IAApE;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAK7F,kBAAf;AACK,mBAAW,2BADhB;AAEK,eAAO6E,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOmC,qBAAV,CAAhB;AACK,iBAAOlC,YADZ;AAEG,aAAKyB,eAAL,CAAqBM,OAArB,EAA8BE,KAA9B,EAAqC,CAArC,EAAwC,KAAK5H,KAAL,CAAWgH,oBAAX,GAAkC,CAA1E,EAA6E,KAAK9B,KAAL,CAAW6B,KAAX,CAAiBe,cAA9F,EAA8G,KAAK5C,KAAL,CAAW6B,KAAX,CAAiBgB,iBAA/H;AAFH;AAHF,KADF;AAUD,G;;iBAEDjB,kB,iCAAqB;AACnB,QAAI,CAAC,KAAK5B,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWgH,oBAAX,GAAkC,CAA3D,EAA8D;AAC5D,aAAO,IAAP;AACD;;AAHkB,QAKZtB,MALY,GAKF3F,IALE,CAKZ2F,MALY;;;AAOnB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,KAAKuG,kBAHN;AAIJD,aAAO,CAJH;AAKJP,cAAQ,KAAKe;AALT,MAAN;;AAQA,QAAM9B,eAAe;AACnBxF,gBAAU,UADS;AAEnBuD,aAAO,KAAK1D,KAAL,CAAWgI,oBAFC;AAGnB1D,cAAQ,KAAKtE,KAAL,CAAWiI,kBAAX,GAAgC,KAAKjI,KAAL,CAAW2H;AAHhC,KAArB;;AAMA,QAAMD,UAAU,KAAKxC,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0B,CAA1B,EAA6B,CAA7B,CAAnC,GAAqE,IAArF;AACA,QAAMN,QAAQ,KAAK1C,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0B,KAAKhD,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0BC,MAA1B,GAAmC,CAA7D,EAAgE,CAAhE,CAAnC,GAAwG,IAAtH;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKtG,gBAAf;AACK,mBAAW,2BADhB;AAEK,eAAO2E,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAO0C,mBAAV,CAAhB;AACK,iBAAOzC,YADZ;AAEG,aAAKyB,eAAL,CAAqBM,OAArB,EAA8BE,KAA9B,EAAqC,CAArC,EAAwC,KAAK5H,KAAL,CAAWgH,oBAAX,GAAkC,CAA1E,EAA6E,KAAK9B,KAAL,CAAW6B,KAAX,CAAiBmB,QAA9F,EAAwG,KAAKhD,KAAL,CAAW6B,KAAX,CAAiBsB,WAAzH;AAFH;AAHF,KADF;AAUD,G;;iBAEDnC,e,8BAAkB;AAChB,QAAI,CAAC,KAAKhB,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWsI,qBAAX,GAAmC,CAA5D,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAHe,QAKT5C,MALS,GAKC3F,IALD,CAKT2F,MALS;;;AAOhB,QAAMc,qBACDd,OAAOe,IADN;AAEJQ,aAAO,CAFH;AAGJtG,WAAK,CAHD;AAIJ+F,cAAQ,CAJJ;AAKJhD,aAAO,KAAK6E;AALR,MAAN;;AAQA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKxG,aAAf;AACK,mBAAW,2BADhB;AAEK,eAAOyE,KAFZ;AAGG,WAAKgC,qBAAL,EAHH;AAIG,WAAKC,qBAAL,EAJH;AAKG,WAAKC,mBAAL;AALH,KADF;AASD,G;;iBAEDF,qB,oCAAwB;AACtB,QAAI,CAAC,KAAKtD,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWsI,qBAAX,GAAmC,CAA5D,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAHqB,QAKf5C,MALe,GAKL3F,IALK,CAKf2F,MALe;;;AAOtB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,CAHD;AAIJsG,aAAO,CAJH;AAKJ3C,cAAQ,KAAK4C;AALT,MAAN;;AAQA,QAAMvB,eAAe,EAArB;;AAGA,QAAMgD,aAAa,KAAK3I,KAAL,CAAW4I,WAAX,GAAyB,CAAzB,GAA6B,KAAK5I,KAAL,CAAW4I,WAAX,GAAyB,KAAK5I,KAAL,CAAWsI,qBAAjE,GAAyF,CAA5G;AACA,QAAMO,WAAWF,aAAaA,aAAa,KAAK3I,KAAL,CAAWsI,qBAAxB,GAAgD,CAA7D,GAAiE,IAAlF;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKrG,mBAAf;AACK,mBAAW,2BADhB;AAEK,eAAOuE,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOoD,sBAAV,CAAhB;AACK,iBAAOnD,YADZ;AAEG,aAAKyB,eAAL,CAAqB,CAArB,EAAwB,KAAKpH,KAAL,CAAWqH,gBAAX,GAA8B,CAAtD,EAAyDsB,UAAzD,EAAqEE,QAArE,EAA+E,KAAK3D,KAAL,CAAW6B,KAAX,CAAiBgC,YAAhG,EAA8G,KAAK7D,KAAL,CAAW6B,KAAX,CAAiBiC,eAA/H;AAFH;AAHF,KADF;AAUD,G;;iBAEDP,qB,oCAAwB;AACtB,QAAI,CAAC,KAAKvD,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWsI,qBAAX,GAAmC,CAAxD,IAA6D,KAAKtI,KAAL,CAAWwH,gBAAX,GAA8B,CAA/F,EAAkG;AAChG,aAAO,IAAP;AACD;;AAHqB,QAKf9B,MALe,GAKL3F,IALK,CAKf2F,MALe;;;AAOtB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJkG,cAAQ,CAHJ;AAIJO,aAAO,CAJH;AAKJ3C,cAAQ,KAAKmD;AALT,MAAN;;AAQA,QAAM9B,eAAe,EAArB;;AAGA,QAAM+B,UAAU,KAAK1H,KAAL,CAAW2H,QAAX,GAAsB,CAAtB,GAA0B,KAAK3H,KAAL,CAAW2H,QAAX,GAAsB,KAAK3H,KAAL,CAAWwH,gBAA3D,GAA8E,CAA9F;AACA,QAAMI,QAAQF,UAAUA,UAAU,KAAK1H,KAAL,CAAWwH,gBAArB,GAAwC,CAAlD,GAAsD,IAApE;;AAEA,QAAMmB,aAAa,KAAK3I,KAAL,CAAW4I,WAAX,GAAyB,CAAzB,GAA6B,KAAK5I,KAAL,CAAW4I,WAAX,GAAyB,KAAK5I,KAAL,CAAWsI,qBAAjE,GAAyF,CAA5G;AACA,QAAMO,WAAWF,aAAaA,aAAa,KAAK3I,KAAL,CAAWsI,qBAAxB,GAAgD,CAA7D,GAAiE,IAAlF;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKnG,mBAAf;AACK,mBAAW,2BADhB;AAEK,eAAOqE,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOuD,sBAAV,CAAhB;AACK,iBAAOtD,YADZ;AAEG,aAAKyB,eAAL,CAAqBM,OAArB,EAA8BE,KAA9B,EAAqCe,UAArC,EAAiDE,QAAjD,EAA2D,KAAK3D,KAAL,CAAW6B,KAAX,CAAiBmC,eAA5E,EAA6F,KAAKhE,KAAL,CAAW6B,KAAX,CAAiBoC,kBAA9G;AAFH;AAHF,KADF;AAUD,G;;iBAEDT,mB,kCAAsB;AACpB,QAAI,CAAC,KAAKxD,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWsI,qBAAX,GAAmC,CAA5D,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAHmB,QAKb5C,MALa,GAKH3F,IALG,CAKb2F,MALa;;;AAOpB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,KAAKuG,kBAHN;AAIJD,aAAO,CAJH;AAKJP,cAAQ,KAAKe;AALT,MAAN;;AAQA,QAAM9B,eAAe;AACnBxF,gBAAU,UADS;AAEnBuD,aAAO,KAAK1D,KAAL,CAAWgI,oBAFC;AAGnB1D,cAAQ,KAAKtE,KAAL,CAAWiI,kBAAX,GAAgC,KAAKjI,KAAL,CAAW2H,QAHhC;AAInBhH,WAAK,CAAC,KAAKuG,kBAJQ;AAKnBR,cAAQ,CAAC,KAAKe;AALK,KAArB;;AAQA,QAAMkB,aAAa,KAAK3I,KAAL,CAAW4I,WAAX,GAAyB,CAAzB,GAA6B,KAAK5I,KAAL,CAAW4I,WAAX,GAAyB,KAAK5I,KAAL,CAAWsI,qBAAjE,GAAyF,CAA5G;AACA,QAAMO,WAAWF,aAAaA,aAAa,KAAK3I,KAAL,CAAWsI,qBAAxB,GAAgD,CAA7D,GAAiE,IAAlF;;AAEA,QAAMZ,UAAU,KAAKxC,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0B,CAA1B,EAA6B,CAA7B,CAAnC,GAAqE,IAArF;AACA,QAAMN,QAAQ,KAAK1C,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0B,KAAKhD,KAAL,CAAW6B,KAAX,CAAiBmB,QAAjB,CAA0BC,MAA1B,GAAmC,CAA7D,EAAgE,CAAhE,CAAnC,GAAwG,IAAtH;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAK9F,iBAAf;AACK,mBAAW,2BADhB;AAEK,eAAOmE,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAO0D,oBAAV,CAAhB;AACK,iBAAOzD,YADZ;AAEG,aAAKyB,eAAL,CAAqBM,OAArB,EAA8BE,KAA9B,EAAqCe,UAArC,EAAiDE,QAAjD,EAA2D,KAAK3D,KAAL,CAAW6B,KAAX,CAAiBsC,SAA5E,EAAuF,KAAKnE,KAAL,CAAW6B,KAAX,CAAiBuC,YAAxG;AAFH;AAHF,KADF;AAUD,G;;iBAEDnD,gB,+BAAmB;AAAA,QACVT,MADU,GACA3F,IADA,CACV2F,MADU;;;AAGjB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,KAAKmG,qBAFP;AAGJhG,WAAK,CAHD;AAIJ+F,cAAQ,CAJJ;AAKJO,aAAO,KAAKsB;AALR,MAAN;;AAQA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKhG,cAAf;AACK,mBAAW,2BADhB;AAEK,eAAOiE,KAFZ;AAGG,WAAK+C,sBAAL,EAHH;AAIG,WAAKC,sBAAL,EAJH;AAKG,WAAKC,oBAAL;AALH,KADF;AASD,G;;iBAEDF,sB,qCAAyB;AACvB,QAAI,CAAC,KAAKrE,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWqH,gBAAX,GAA8B,CAAvD,EAA0D;AACxD,aAAO,IAAP;AACD;;AAHsB,QAKhB3B,MALgB,GAKN3F,IALM,CAKhB2F,MALgB;;;AAOvB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,CAHD;AAIJsG,aAAO,CAJH;AAKJ3C,cAAQ,KAAK4C,kBALT;AAMJwC,gBAAU,SANN,CAMgB;AANhB,MAAN;;AASA,QAAM/D,eAAe;AACnBxF,gBAAU,UADS;AAEnBuD,aAAO,KAAK1D,KAAL,CAAWgI,oBAAX,GAAkC,KAAKhI,KAAL,CAAW4I,WAFjC;AAGnBtE,cAAQ,KAAKtE,KAAL,CAAWiI,kBAHA;AAInBzH,YAAM,CAAC,KAAKmG;AAJO,KAArB;;AAOA,QAAMgC,aAAa,KAAKzD,KAAL,CAAW6B,KAAX,CAAiB4C,UAAjB,CAA4BxB,MAA5B,GAAqC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiB4C,UAAjB,CAA4B,CAA5B,EAA+B,CAA/B,CAArC,GAAyE,IAA5F;AACA,QAAMd,WAAW,KAAK3D,KAAL,CAAW6B,KAAX,CAAiB4C,UAAjB,CAA4BxB,MAA5B,GAAqC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiB4C,UAAjB,CAA4B,KAAKzE,KAAL,CAAW6B,KAAX,CAAiB4C,UAAjB,CAA4BxB,MAA5B,GAAqC,CAAjE,EAAoE,CAApE,CAArC,GAA8G,IAA/H;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAK1F,oBAAf;AACK,mBAAW,2BADhB;AAEK,eAAO+D,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOkE,uBAAV,CAAhB;AACK,iBAAOjE,YADZ;AAEG,aAAKyB,eAAL,CAAqB,CAArB,EAAwB,KAAKpH,KAAL,CAAWqH,gBAAX,GAA8B,CAAtD,EAAyDsB,UAAzD,EAAqEE,QAArE,EAA+E,KAAK3D,KAAL,CAAW6B,KAAX,CAAiB8C,OAAhG,EAAyG,KAAK3E,KAAL,CAAW6B,KAAX,CAAiB4C,UAA1H;AAFH;AAHF,KADF;AAUD,G;;iBAEDH,sB,qCAAyB;AACvB,QAAI,CAAC,KAAKtE,KAAL,CAAW6B,KAAZ,IAAqB,KAAK/G,KAAL,CAAWwH,gBAAX,GAA8B,CAAvD,EAA0D;AACxD,aAAO,IAAP;AACD;;AAHsB,QAKhB9B,MALgB,GAKN3F,IALM,CAKhB2F,MALgB;;;AAOvB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJkG,cAAQ,CAHJ;AAIJO,aAAO,CAJH;AAKJ3C,cAAQ,KAAKmD,kBALT;AAMJiC,gBAAU,SANN,CAMgB;AANhB,MAAN;;AASA,QAAM/D,eAAe;AACnBxF,gBAAU,UADS;AAEnBuD,aAAO,KAAK1D,KAAL,CAAWgI,oBAAX,GAAkC,KAAKhI,KAAL,CAAW4I,WAFjC;AAGnBtE,cAAQ,KAAKtE,KAAL,CAAWiI,kBAHA;AAInBzH,YAAM,CAAC,KAAKmG;AAJO,KAArB;;AAOA,QAAMgC,aAAa,KAAKzD,KAAL,CAAW6B,KAAX,CAAiB+C,aAAjB,CAA+B3B,MAA/B,GAAwC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiB+C,aAAjB,CAA+B,CAA/B,EAAkC,CAAlC,CAAxC,GAA+E,IAAlG;AACA,QAAMjB,WAAW,KAAK3D,KAAL,CAAW6B,KAAX,CAAiB+C,aAAjB,CAA+B3B,MAA/B,GAAwC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiB+C,aAAjB,CAA+B,KAAK5E,KAAL,CAAW6B,KAAX,CAAiB+C,aAAjB,CAA+B3B,MAA/B,GAAwC,CAAvE,EAA0E,CAA1E,CAAxC,GAAuH,IAAxI;;AAEA,QAAMT,UAAU,KAAK1H,KAAL,CAAW2H,QAAX,GAAsB,CAAtB,GAA0B,KAAK3H,KAAL,CAAW2H,QAAX,GAAsB,KAAK3H,KAAL,CAAWwH,gBAA3D,GAA8E,CAA9F;AACA,QAAMI,QAAQF,UAAUA,UAAU,KAAK1H,KAAL,CAAWwH,gBAArB,GAAwC,CAAlD,GAAsD,IAApE;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAK7E,oBAAf;AACK,mBAAW,2BADhB;AAEK,eAAO6D,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOkE,uBAAV,CAAhB;AACK,iBAAOjE,YADZ;AAEG,aAAKyB,eAAL,CAAqBM,OAArB,EAA8BE,KAA9B,EAAqCe,UAArC,EAAiDE,QAAjD,EAA2D,KAAK3D,KAAL,CAAW6B,KAAX,CAAiBgD,UAA5E,EAAwF,KAAK7E,KAAL,CAAW6B,KAAX,CAAiB+C,aAAzG;AAFH;AAHF,KADF;AAUD,G;;iBAEDL,oB,mCAAuB;AACrB,QAAI,CAAC,KAAKvE,KAAL,CAAW6B,KAAhB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAHoB,QAKdrB,MALc,GAKJ3F,IALI,CAKd2F,MALc;;;AAOrB,QAAMc,qBACDd,OAAOe,IADN;AAEJjG,YAAM,CAFF;AAGJG,WAAK,KAAKuG,kBAHN;AAIJD,aAAO,CAJH;AAKJP,cAAQ,KAAKe;AALT,MAAN;;AAQA,QAAM9B,eAAe;AACnBxF,gBAAU,UADS;AAEnBuD,aAAO,KAAK1D,KAAL,CAAWgI,oBAAX,GAAkC,KAAKhI,KAAL,CAAW4I,WAFjC;AAGnBtE,cAAQ,KAAKtE,KAAL,CAAWiI,kBAAX,GAAgC,KAAKjI,KAAL,CAAW2H,QAHhC;AAInBnH,YAAM,CAAC,KAAKmG,qBAJO;AAKnBhG,WAAK,CAAC,KAAKuG;AALQ,KAArB;;AAQA,QAAMQ,UAAU,KAAKxC,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB7B,MAAtB,GAA+B,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB,CAAtB,EAAyB,CAAzB,CAA/B,GAA6D,IAA7E;AACA,QAAMpC,QAAQ,KAAK1C,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB7B,MAAtB,GAA+B,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB,KAAK9E,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB7B,MAAtB,GAA+B,CAArD,EAAwD,CAAxD,CAA/B,GAA4F,IAA1G;;AAEA,QAAMQ,aAAa,KAAKzD,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB9B,MAAzB,GAAkC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB,CAAzB,EAA4B,CAA5B,CAAlC,GAAmE,IAAtF;AACA,QAAMpB,WAAW,KAAK3D,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB9B,MAAzB,GAAkC,KAAKjD,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB,KAAK/E,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB9B,MAAzB,GAAkC,CAA3D,EAA8D,CAA9D,CAAlC,GAAqG,IAAtH;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKtF,kBAAf;AACK,mBAAW,2BADhB;AAEK,eAAO2D,KAFZ;AAGE;AAAA;AAAA,UAAK,WAAW,0BAAGd,OAAOwE,qBAAV,CAAhB;AACK,iBAAOvE,YADZ;AAEG,aAAKyB,eAAL,CAAqBM,OAArB,EAA8BE,KAA9B,EAAqCe,UAArC,EAAiDE,QAAjD,EAA2D,KAAK3D,KAAL,CAAW6B,KAAX,CAAiBiD,IAA5E,EAAkF,KAAK9E,KAAL,CAAW6B,KAAX,CAAiBkD,OAAnG;AAFH;AAHF,KADF;AAUD,G;;iBAED7D,uB,sCAA0B;AAAA;;AACxB,QAAI,KAAKzC,eAAL,IAAwB,IAA5B,EAAkC;AAChC,aAAO,IAAP;AACD;;AAHuB,QAKjB+B,MALiB,GAKP3F,IALO,CAKjB2F,MALiB;;;AAOxB,QAAMjC,SAAS,KAAKyB,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyBE,IAAzB,CAA8B,UAACC,IAAD,EAAU;AACrD,aAAOA,KAAK,CAAL,MAAY,OAAKzG,eAAxB;AACD,KAFc,CAAf;;AAIA,QAAM0G,0BACD3E,OAAO4E,iBADN;AAEJ9J,YAAM,CAAC,KAAKc,YAAL,CAAkB2B,UAAnB,GAAgCQ,OAAO,CAAP,CAAhC,GAA4CA,OAAO,CAAP,CAA5C,GAAwD;AAF1D,MAAN;;AAKA,WACE,uCAAK,OAAO4G,UAAZ,GADF;AAGD,G;;iBAEDhE,oB,mCAAuB;AAAA;;AACrB,QAAI,KAAK9B,YAAL,IAAqB,IAAzB,EAA+B;AAC7B,aAAO,IAAP;AACD;;AAHoB,QAKdmB,MALc,GAKJ3F,IALI,CAKd2F,MALc;;;AAOrB,QAAMrB,MAAM,KAAKa,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsBG,IAAtB,CAA2B,UAACC,IAAD,EAAU;AAC/C,aAAOA,KAAK,CAAL,MAAY,OAAK7F,YAAxB;AACD,KAFW,CAAZ;;AAIA,QAAM8F,0BACD3E,OAAO6E,cADN;AAEJ5J,WAAK,CAAC,KAAKW,YAAL,CAAkB0B,SAAnB,GAA+BqB,IAAI,CAAJ,CAA/B,GAAwCA,IAAI,CAAJ,CAAxC,GAAiD;AAFlD,MAAN;;AAKA,WACE,uCAAK,OAAOgG,UAAZ,GADF;AAGD,G;;iBA4EDjK,e,4BAAgBoK,E,EAAI;AAClB,QAAIlK,IAAI,CAAR;AACA,QAAIG,IAAI,CAAR;;AAEA,WAAO+J,EAAP,EAAW;AACTlK,WAAMkK,GAAGC,UAAH,GAAgBD,GAAGvH,UAAnB,GAAgCuH,GAAGE,UAAzC;AACAjK,WAAM+J,GAAGG,SAAH,GAAeH,GAAGxH,SAAlB,GAA8BwH,GAAGI,SAAvC;AACAJ,WAAKA,GAAGK,YAAR;AACD;;AAED,WAAO,EAAErK,MAAMF,CAAR,EAAWK,KAAKF,CAAhB,EAAP;AACD,G;;iBAEDG,e,4BAAgBN,C,EAAGG,C,EAAG;AACpB,QAAMqK,gBAAgB,KAAKA,aAA3B;;AAEA,WAAQxK,KAAK,KAAKY,KAAL,CAAW6J,WAAX,GAAyBD,aAA/B,IACCrK,KAAK,KAAKS,KAAL,CAAW8J,YAAX,GAA0BF,aADvC;AAED,G;;iBAwBDhK,iC,gDAAoC;AAClCmK,iBAAa,KAAKC,wCAAlB;AACA,SAAKA,wCAAL,GAAgD,IAAhD;;AAEA,SAAK9J,cAAL,CAAoB+J,KAApB,CAA0BC,aAA1B,GAA0C,MAA1C;AACD,G;;iBAEDrK,sC,qDAAyC;AAAA;;AACvCkK,iBAAa,KAAKC,wCAAlB;;AAEA,SAAKA,wCAAL,GAAgDG,WAAW,YAAM;AAC/D,aAAKH,wCAAL,GAAgD,IAAhD;;AAEA,UAAI,CAAC,OAAKrK,gBAAV,EAA4B;AAC1B,eAAKyK,qCAAL;AACD;AACF,KAN+C,EAM7CxL,2BAN6C,CAAhD;AAOD,G;;iBAMDwL,qC,oDAAwC;AACtC,SAAKlK,cAAL,CAAoB+J,KAApB,CAA0BC,aAA1B,GAA0C,MAA1C;AACD,G;;iBA6HDxH,e,8BAAkB;AAChB,SAAK2H,UAAL,CAAgBC,UAAhB;AACD,G;;iBAQDtI,M,mBAAOF,S,EAAWC,U,EAAY0B,K,EAAO;AACnC,QAAMrE,IAAI2C,aAAa,KAAKjD,KAAL,CAAWyL,cAAlC;AACA,QAAMhL,IAAIuC,YAAY,KAAKhD,KAAL,CAAW0L,cAAjC;;AAEA,QAAMC,SAAS;AACbnL,YAAMwD,KAAKE,GAAL,CAAS,CAAT,EAAY5D,CAAZ,CADO;AAEbK,WAAKqD,KAAKE,GAAL,CAAS,CAAT,EAAYzD,CAAZ,CAFQ;AAGbiD,aAAO,KAAKxC,KAAL,CAAW0K,WAAX,GAA0B,IAAI,KAAK5L,KAAL,CAAWyL,cAAzC,IAA4DnL,IAAI,CAAJ,GAAQA,CAAR,GAAY,CAAxE,CAHM;AAIbgE,cAAQ,KAAKpD,KAAL,CAAW2K,YAAX,GAA2B,IAAI,KAAK7L,KAAL,CAAW0L,cAA1C,IAA6DjL,IAAI,CAAJ,GAAQA,CAAR,GAAY,CAAzE;AAJK,KAAf;;AAOA,QAAMsG,QAAQ,KAAKwE,UAAL,CAAgBO,iBAAhB,CAAkCH,MAAlC,EAA0C,KAAK3L,KAAL,CAAW2H,QAArD,EAA+D,KAAK3H,KAAL,CAAW4I,WAA1E,CAAd;;AAEA,QAAI7B,MAAMgF,OAAN,IAAiBpH,KAArB,EAA4B;AAC1B,UAAM+C,UAAUX,MAAMiD,IAAN,CAAW7B,MAAX,GAAoBpB,MAAMiD,IAAN,CAAW,CAAX,EAAc,CAAd,CAApB,GAAuC,IAAvD;AACA,UAAMpC,QAAQb,MAAMiD,IAAN,CAAW7B,MAAX,GAAoBpB,MAAMiD,IAAN,CAAWjD,MAAMiD,IAAN,CAAW7B,MAAX,GAAoB,CAA/B,EAAkC,CAAlC,CAApB,GAA2D,IAAzE;AACA,UAAMQ,aAAa5B,MAAMkD,OAAN,CAAc9B,MAAd,GAAuBpB,MAAMkD,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAvB,GAA6C,IAAhE;AACA,UAAMpB,WAAW9B,MAAMkD,OAAN,CAAc9B,MAAd,GAAuBpB,MAAMkD,OAAN,CAAclD,MAAMkD,OAAN,CAAc9B,MAAd,GAAuB,CAArC,EAAwC,CAAxC,CAAvB,GAAoE,IAArF;;AAEA,UAAI,KAAKnI,KAAL,CAAWgM,eAAf,EAAgC;AAC9B,aAAKhM,KAAL,CAAWgM,eAAX,CAA2BtE,OAA3B,EAAoCE,KAApC,EAA2Ce,UAA3C,EAAuDE,QAAvD;AACD;;AAED,WAAKoD,QAAL,CAAc,EAAClF,OAAOA,KAAR,EAAd;AACD;;AAED,QAAI,KAAK7B,KAAL,CAAW6B,KAAf,EAAsB;AACpB,WAAKmF,SAAL,CAAejJ,UAAf,EAA2BD,SAA3B;AACD;AACF,G;;iBAEDkJ,S,sBAAU5L,C,EAAGG,C,EAAG;AACd,QAAI,KAAKqB,aAAT,EAAwB;AACtB,WAAKA,aAAL,CAAmBqK,UAAnB,CAA8B,CAA9B,EAAiChB,KAAjC,CAAuCxK,GAAvC,GAA8C,CAACF,CAAD,GAAK,KAAKyG,kBAAX,GAAiC,IAA9E;AACD;;AAED,QAAI,KAAK5E,cAAT,EAAyB;AACvB,WAAKA,cAAL,CAAoB6J,UAApB,CAA+B,CAA/B,EAAkChB,KAAlC,CAAwCxK,GAAxC,GAA+C,CAACF,CAAD,GAAK,KAAKyG,kBAAX,GAAiC,IAA/E;AACD;;AAED,QAAI,KAAKxE,iBAAT,EAA4B;AAC1B,WAAKA,iBAAL,CAAuByJ,UAAvB,CAAkC,CAAlC,EAAqChB,KAArC,CAA2C3K,IAA3C,GAAmD,CAACF,CAAD,GAAK,KAAKqG,qBAAX,GAAoC,IAAtF;AACD;;AAED,QAAI,KAAK/D,iBAAT,EAA4B;AAC1B,WAAKA,iBAAL,CAAuBuJ,UAAvB,CAAkC,CAAlC,EAAqChB,KAArC,CAA2C3K,IAA3C,GAAmD,CAACF,CAAD,GAAK,KAAKqG,qBAAX,GAAoC,IAAtF;AACD;;AAED,SAAK7D,eAAL,CAAqBqJ,UAArB,CAAgC,CAAhC,EAAmChB,KAAnC,CAAyCxK,GAAzC,GAAgD,CAACF,CAAD,GAAK,KAAKyG,kBAAX,GAAiC,IAAhF;AACA,SAAKpE,eAAL,CAAqBqJ,UAArB,CAAgC,CAAhC,EAAmChB,KAAnC,CAAyC3K,IAAzC,GAAiD,CAACF,CAAD,GAAK,KAAKqG,qBAAX,GAAoC,IAApF;AACD,G;;iBAkCDS,e,4BAAgBM,O,EAASE,K,EAAOe,U,EAAYE,Q,EAAUmB,I,EAAMC,O,EAAS;AACnE,QAAMlD,QAAQ,EAAd;;AAEA,QAAMtB,SAAS,KAAKzF,KAAL,CAAWoM,UAA1B;;AAEA,SAAK,IAAI/H,MAAMuD,KAAf,EAAsBvD,OAAOqD,OAA7B,EAAsC,EAAErD,GAAxC,EAA6C;AAC3C,WAAK,IAAIZ,SAASoF,QAAlB,EAA4BpF,UAAUkF,UAAtC,EAAkD,EAAElF,MAApD,EAA4D;AAC1D,YAAM4I,UAAUrC,KAAK3F,MAAMqD,OAAX,CAAhB;AACA,YAAM4E,aAAarC,QAAQxG,SAASkF,UAAjB,CAAnB;;AAEA5B,cAAMwF,IAAN,CAAW9G,OAAOpB,GAAP,EAAYgI,OAAZ,EAAqB5I,MAArB,EAA6B6I,UAA7B,EAAyC,IAAzC,CAAX;AACD;AACF;;AAED,WAAOvF,KAAP;AACD,G;;;;wBAvXqB;AACpB,UAAI,CAAC,KAAK7B,KAAL,CAAW6B,KAAZ,IAAqB,CAAC,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB9B,MAAnD,EAA2D;AACzD,eAAO,KAAKnI,KAAL,CAAWgI,oBAAX,GAAkC,KAAKhI,KAAL,CAAW4I,WAApD;AACD;;AAED,UAAM4D,aAAa,KAAKtH,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB,KAAK/E,KAAL,CAAW6B,KAAX,CAAiBkD,OAAjB,CAAyB9B,MAAzB,GAAkC,CAA3D,CAAnB;AACA,UAAMzE,QAAQ8I,WAAW,CAAX,IAAgBA,WAAW,CAAX,CAA9B;;AAEA,aAAO9I,QAAS,CAAE,KAAK1D,KAAL,CAAW4I,WAAX,GAAyB,CAA1B,GAA+B4D,WAAW,CAAX,CAAhC,IAAiD,KAAKxM,KAAL,CAAWgI,oBAA5E;AACD;;;wBAEsB;AACrB,UAAI,CAAC,KAAK9C,KAAL,CAAW6B,KAAZ,IAAqB,CAAC,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB7B,MAAhD,EAAwD;AACtD,eAAO,KAAKnI,KAAL,CAAWiI,kBAAX,GAAgC,KAAKjI,KAAL,CAAW2H,QAAlD;AACD;;AAED,UAAM8E,UAAU,KAAKvH,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB,KAAK9E,KAAL,CAAW6B,KAAX,CAAiBiD,IAAjB,CAAsB7B,MAAtB,GAA+B,CAArD,CAAhB;AACA,UAAM7D,SAASmI,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAA5B;;AAEA,aAAOnI,SAAU,CAAE,KAAKtE,KAAL,CAAW2H,QAAX,GAAsB,CAAvB,GAA4B8E,QAAQ,CAAR,CAA7B,IAA2C,KAAKzM,KAAL,CAAWiI,kBAAvE;AACD;;;wBAEwB;AACvB,UAAI,CAAC,KAAK/C,KAAL,CAAW6B,KAAZ,IAAqB,CAAC,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBO,WAAjB,CAA6Ba,MAAvD,EAA+D;AAC7D,eAAO,CAAP;AACD;;AAED,UAAMuE,iBAAiB,KAAKxH,KAAL,CAAW6B,KAAX,CAAiBO,WAAjB,CAA6B,KAAKpC,KAAL,CAAW6B,KAAX,CAAiBO,WAAjB,CAA6Ba,MAA7B,GAAsC,CAAnE,CAAvB;AACA,UAAMwE,YAAYD,eAAe,CAAf,IAAoBA,eAAe,CAAf,CAAtC;;AAEA,aAAOC,SAAP;AACD;;;wBAEwB;AACvB,UAAI,CAAC,KAAKzH,KAAL,CAAW6B,KAAZ,IAAqB,CAAC,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBe,cAAjB,CAAgCK,MAA1D,EAAkE;AAChE,eAAO,CAAP;AACD;;AAED,UAAMyE,gBAAgB,KAAK1H,KAAL,CAAW6B,KAAX,CAAiBe,cAAjB,CAAgC,KAAK5C,KAAL,CAAW6B,KAAX,CAAiBe,cAAjB,CAAgCK,MAAhC,GAAyC,CAAzE,CAAtB;AACA,UAAM0E,mBAAmBD,cAAc,CAAd,IAAmBA,cAAc,CAAd,CAA5C;;AAEA,aAAOC,gBAAP;AACD;;;wBAE4B;AAC3B,UAAI,CAAC,KAAK3H,KAAL,CAAW6B,KAAZ,IAAqB,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBuC,YAAjB,CAA8BnB,MAA9B,KAAyC,CAAlE,EAAqE;AACnE,eAAO,CAAP;AACD;;AAED,UAAMqE,aAAa,KAAKtH,KAAL,CAAW6B,KAAX,CAAiBuC,YAAjB,CAA8B,KAAKpE,KAAL,CAAW6B,KAAX,CAAiBuC,YAAjB,CAA8BnB,MAA9B,GAAuC,CAArE,CAAnB;AACA,UAAM2E,aAAaN,WAAW,CAAX,IAAgBA,WAAW,CAAX,CAAnC;;AAEA,aAAOM,UAAP;AACD;;;wBAE2B;AAC1B,UAAI,CAAC,KAAK5H,KAAL,CAAW6B,KAAZ,IAAqB,CAAC,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBsB,WAAjB,CAA6BF,MAAvD,EAA+D;AAC7D,eAAO,CAAP;AACD;;AAED,UAAMqE,aAAa,KAAKtH,KAAL,CAAW6B,KAAX,CAAiBsB,WAAjB,CAA6B,KAAKnD,KAAL,CAAW6B,KAAX,CAAiBsB,WAAjB,CAA6BF,MAA7B,GAAsC,CAAnE,CAAnB;AACA,UAAM2E,aAAaN,WAAW,CAAX,IAAgBA,WAAW,CAAX,CAAnC;;AAEA,aAAOM,UAAP;AACD;;;wBAEmB;AAClB,UAAI,KAAKC,cAAL,IAAuB,IAA3B,EAAiC;AAC/B,aAAKA,cAAL,GAAsB/I,KAAKE,GAAL,CAAS,EAAT,EAAa,KAAK5C,YAAL,CAAkB0J,YAAlB,GAAiC,KAAK1J,YAAL,CAAkBuK,YAAhE,CAAtB;AACD;;AAED,aAAO,KAAKkB,cAAZ;AACD;;;wBA+DiB;AAChB,aAAO,KAAK7B,wCAAL,IAAiD,IAAxD;AACD;;;wBA+LgB;AACf,UAAI,CAAC,KAAK8B,WAAV,EAAuB;AACrB,aAAKA,WAAL,GAAmB,8BAAnB;AACA,aAAKA,WAAL,CAAiBhF,oBAAjB,GAAwC,KAAKhI,KAAL,CAAWgI,oBAAnD;AACA,aAAKgF,WAAL,CAAiB/E,kBAAjB,GAAsC,KAAKjI,KAAL,CAAWiI,kBAAjD;AACA,aAAK+E,WAAL,CAAiBhG,oBAAjB,GAAwC,KAAKhH,KAAL,CAAWgH,oBAAnD;AACA,aAAKgG,WAAL,CAAiB1E,qBAAjB,GAAyC,KAAKtI,KAAL,CAAWsI,qBAApD;AACA,aAAK0E,WAAL,CAAiB3F,gBAAjB,GAAoC,KAAKrH,KAAL,CAAWqH,gBAA/C;AACA,aAAK2F,WAAL,CAAiBxF,gBAAjB,GAAoC,KAAKxH,KAAL,CAAWwH,gBAA/C;AACA,aAAKwF,WAAL,CAAiBpI,kBAAjB,GAAsC,KAAKA,kBAA3C;AACA,aAAKoI,WAAL,CAAiBlI,oBAAjB,GAAwC,KAAKA,oBAA7C;AACD;;AAED,aAAO,KAAKkI,WAAZ;AACD;;;;EAl3B+B,gBAAMC,S;;AAAnBlN,I,CACZmN,S,GAAY;AACjBzB,kBAAgB,gBAAM0B,SAAN,CAAgBC,MADf;;AAGjB1B,kBAAgB,gBAAMyB,SAAN,CAAgBC,MAHf;;AAKjBnF,sBAAoB,gBAAMkF,SAAN,CAAgBC,MALnB;;AAOjBpF,wBAAsB,gBAAMmF,SAAN,CAAgBC,MAPrB;;AASjBxE,eAAa,gBAAMuE,SAAN,CAAgBC,MAAhB,CAAuBC,UATnB;;AAWjB1F,YAAU,gBAAMwF,SAAN,CAAgBC,MAAhB,CAAuBC,UAXhB;;AAajBrG,wBAAsB,gBAAMmG,SAAN,CAAgBC,MAbrB;;AAejB9E,yBAAuB,gBAAM6E,SAAN,CAAgBC,MAftB;;AAiBjB/F,oBAAkB,gBAAM8F,SAAN,CAAgBC,MAjBjB;;AAmBjB5F,oBAAkB,gBAAM2F,SAAN,CAAgBC,MAnBjB;;AAqBjBrI,eAAa,gBAAMoI,SAAN,CAAgBG,SAAhB,CAA0B,CAAE,gBAAMH,SAAN,CAAgBC,MAAlB,EAA0B,gBAAMD,SAAN,CAAgBI,IAA1C,CAA1B,CArBI;;AAuBjB1I,aAAW,gBAAMsI,SAAN,CAAgBG,SAAhB,CAA0B,CAAE,gBAAMH,SAAN,CAAgBC,MAAlB,EAA0B,gBAAMD,SAAN,CAAgBI,IAA1C,CAA1B,CAvBM;;AAyBjBnB,cAAY,gBAAMe,SAAN,CAAgBI,IAzBX;;AA2BjBvB,mBAAiB,gBAAMmB,SAAN,CAAgBI;AA3BhB,C;AADAxN,I,CA+BZyN,Y,GAAe;AACpB/B,kBAAgB,CADI;AAEpBC,kBAAgB,CAFI;AAGpB1E,wBAAsB,CAHF;AAIpBsB,yBAAuB,CAJH;AAKpBjB,oBAAkB,CALE;AAMpBG,oBAAkB,CANE;AAOpBQ,wBAAsB,GAPF;AAQpBC,sBAAoB;AARA,C;kBA/BHlI,I;;;AAs5BrB,IAAM2F,SAAS;AACbK,aAAW;AACT5F,cAAU,UADD;AAETK,UAAM,CAFG;AAGTG,SAAK,CAHI;AAITsG,WAAO,CAJE;AAKTP,YAAQ;AALC,GADE;;AASbJ,iBAAe;AACbnG,cAAU,UADG;AAEbK,UAAM,CAFO;AAGbG,SAAK,CAHQ;AAIbsG,WAAO,CAJM;AAKbP,YAAQ,CALK;AAMbgD,cAAU,QANG;AAOb0B,mBAAe;AAPF,GATF;;AAmBb7E,mBAAiB;AACfpG,cAAU,UADK;AAEfK,UAAM,CAFS;AAGfG,SAAK,CAHU;AAIfsG,WAAO,CAJQ;AAKfP,YAAQ,CALO;AAMfgD,cAAU,QANK;AAOf+D,6BAAyB;AAPV,GAnBJ;;AA6BbzH,YAAU;AACR7F,cAAU,UADF;AAERK,UAAM,CAFE;AAGRG,SAAK,CAHG;AAIRsG,WAAO,CAJC;AAKRP,YAAQ,CALA;AAMRgD,cAAU;AANF,GA7BG;;AAsCbjD,QAAM;AACJtG,cAAU,UADN;AAEJuJ,cAAU;AAFN,GAtCO;;AA2CbY,qBAAmB;AACjBnK,cAAU,UADO;AAEjBQ,SAAK,CAFY;AAGjB+F,YAAQ,CAHS;AAIjBhD,WAAO,CAJU;AAKjBgK,qBAAiB,SALA;AAMjBC,YAAQ,WANS;AAOjBC,kBAAc;AAPG,GA3CN;;AAqDbrD,kBAAgB;AACdpK,cAAU,UADI;AAEdK,UAAM,CAFQ;AAGdyG,WAAO,CAHO;AAId3C,YAAQ,CAJM;AAKdoJ,qBAAiB,SALH;AAMdC,YAAQ,WANM;AAOdC,kBAAc;AAPA;AArDH,CAAf;;AAgEA7N,KAAK2F,MAAL,GAAcA,MAAd","file":"grid.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport GridCalculator from './grid-calculator';\nimport elementResizeDetector from 'element-resize-detector';\n\nconst POINTER_EVENTS_SCROLL_DELAY = 200;\n\nexport default class Grid extends React.Component {\n  static propTypes = {\n    preloadPixelsX: React.PropTypes.number,\n\n    preloadPixelsY: React.PropTypes.number,\n\n    estimatedRowHeight: React.PropTypes.number,\n\n    estimatedColumnWidth: React.PropTypes.number,\n\n    columnCount: React.PropTypes.number.isRequired,\n\n    rowCount: React.PropTypes.number.isRequired,\n\n    fixedLeftColumnCount: React.PropTypes.number,\n\n    fixedRightColumnCount: React.PropTypes.number,\n\n    fixedHeaderCount: React.PropTypes.number,\n\n    fixedFooterCount: React.PropTypes.number,\n\n    columnWidth: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    rowHeight: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    renderCell: React.PropTypes.func,\n\n    onExtentsChange: React.PropTypes.func\n  };\n\n  static defaultProps = {\n    preloadPixelsX: 0,\n    preloadPixelsY: 0,\n    fixedLeftColumnCount: 0,\n    fixedRightColumnCount: 0,\n    fixedHeaderCount: 0,\n    fixedFooterCount: 0,\n    estimatedColumnWidth: 130,\n    estimatedRowHeight: 30\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._pinnedColumnWidths = {};\n    this._pinnedRowHeights = {};\n\n    this._sizeDetector = elementResizeDetector({strategy: 'scroll'});\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._sizeDetector.listenTo(this._root, this.handleResize);\n    this._scrollInner.addEventListener('scroll', this.handleScroll);\n    this._root.addEventListener('wheel', this.handleWheel);\n\n    this.update(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._sizeDetector.uninstall(this._root);\n    this._scrollInner.removeEventListener('scroll', this.handleScroll);\n    this._root.removeEventListener('wheel', this.handleWheel);\n  }\n\n  render() {\n    const {styles} = Grid;\n\n    const contentStyle = {\n      ...styles.scrollContent,\n      width: this.scrollableWidth,\n      height: this.scrollableHeight\n    };\n\n    return (\n      <div style={styles.container}\n           ref={this.bindRoot}\n           onMouseMove={this.handleRootMouseMove}>\n        <div style={styles.gridBody}>\n          {this.renderLeftPane()}\n          {this.renderRightPane()}\n          {this.renderCenterPane()}\n          {this.renderColumnResizeGuide()}\n          {this.renderRowResizeGuide()}\n        </div>\n        <div style={styles.scrollOverlay}\n             ref={this.bindScrollOverlay}>\n          <div style={styles.scrollContainer}\n               ref={this.bindScrollInner}>\n            <div className={cx('scroll-container', styles.scrollContent)}\n                 style={contentStyle} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: this.fixedLeftColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindLeftPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderLeftPaneHeader()}\n        {this.renderLeftPaneFooter()}\n        {this.renderLeftPaneBody()}\n      </div>\n    );\n  }\n\n  renderLeftPaneHeader() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    return (\n      <div ref={this.bindLeftPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.topLeftRows, this.state.cells.topLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneFooter() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindLeftPaneFooter}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneFooterContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.bottomLeftRows, this.state.cells.bottomLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneBody() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount\n    };\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindLeftPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.leftRows, this.state.cells.leftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPane() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      width: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindRightPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderRightPaneHeader()}\n        {this.renderRightPaneFooter()}\n        {this.renderRightPaneBody()}\n      </div>\n    );\n  }\n\n  renderRightPaneHeader() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRightRows, this.state.cells.topRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneFooter() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneFooter}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneFooterContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRightRows, this.state.cells.bottomRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneBody() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      top: -this.fixedHeadersHeight,\n      bottom: -this.fixedFootersHeight\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindRightPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rightRows, this.state.cells.rightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: this.fixedLeftColumnsWidth,\n      top: 0,\n      bottom: 0,\n      right: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindCenterPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderCenterPaneHeader()}\n        {this.renderCenterPaneFooter()}\n        {this.renderCenterPaneBody()}\n      </div>\n    );\n  }\n\n  renderCenterPaneHeader() {\n    if (!this.state.cells || this.props.fixedHeaderCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight,\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth\n    };\n\n    const fromColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[0][0] : null;\n    const toColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[this.state.cells.topColumns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRows, this.state.cells.topColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneFooter() {\n    if (!this.state.cells || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight,\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth\n    };\n\n    const fromColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[0][0] : null;\n    const toColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[this.state.cells.bottomColumns.length - 1][0] : null;\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindCenterPaneFooter}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRows, this.state.cells.bottomColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneBody() {\n    if (!this.state.cells) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      left: -this.fixedLeftColumnsWidth,\n      top: -this.fixedHeadersHeight\n    };\n\n    const fromRow = this.state.cells.rows.length ? this.state.cells.rows[0][0] : null;\n    const toRow = this.state.cells.rows.length ? this.state.cells.rows[this.state.cells.rows.length - 1][0] : null;\n\n    const fromColumn = this.state.cells.columns.length ? this.state.cells.columns[0][0] : null;\n    const toColumn = this.state.cells.columns.length ? this.state.cells.columns[this.state.cells.columns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.centerPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rows, this.state.cells.columns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderColumnResizeGuide() {\n    if (this._resizingColumn == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const column = this.state.cells.columns.find((cell) => {\n      return cell[0] === this._resizingColumn;\n    });\n\n    const guideStyle = {\n      ...styles.columnResizeGuide,\n      left: -this._scrollInner.scrollLeft + column[1] + column[2] - 2\n    };\n\n    return (\n      <div style={guideStyle} />\n    );\n  }\n\n  renderRowResizeGuide() {\n    if (this._resizingRow == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const row = this.state.cells.rows.find((cell) => {\n      return cell[0] === this._resizingRow;\n    });\n\n    const guideStyle = {\n      ...styles.rowResizeGuide,\n      top: -this._scrollInner.scrollTop + row[1] + row[2] - 2\n    };\n\n    return (\n      <div style={guideStyle} />\n    );\n  }\n\n  get scrollableWidth() {\n    if (!this.state.cells || !this.state.cells.columns.length) {\n      return this.props.estimatedColumnWidth * this.props.columnCount;\n    }\n\n    const lastColumn = this.state.cells.columns[this.state.cells.columns.length - 1];\n    const width = lastColumn[1] + lastColumn[2];\n\n    return width + (((this.props.columnCount - 1) - lastColumn[0]) * this.props.estimatedColumnWidth);\n  }\n\n  get scrollableHeight() {\n    if (!this.state.cells || !this.state.cells.rows.length) {\n      return this.props.estimatedRowHeight * this.props.rowCount;\n    }\n\n    const lastRow = this.state.cells.rows[this.state.cells.rows.length - 1];\n    const height = lastRow[1] + lastRow[2];\n\n    return height + (((this.props.rowCount - 1) - lastRow[0]) * this.props.estimatedRowHeight);\n  }\n\n  get fixedHeadersHeight() {\n    if (!this.state.cells || !this.state.cells.topLeftRows.length) {\n      return 0;\n    }\n\n    const lastTopLeftRow = this.state.cells.topLeftRows[this.state.cells.topLeftRows.length - 1];\n    const topOffset = lastTopLeftRow[1] + lastTopLeftRow[2];\n\n    return topOffset;\n  }\n\n  get fixedFootersHeight() {\n    if (!this.state.cells || !this.state.cells.bottomLeftRows.length) {\n      return 0;\n    }\n\n    const lastBottomRow = this.state.cells.bottomLeftRows[this.state.cells.bottomLeftRows.length - 1];\n    const lastBottomRowTop = lastBottomRow[1] + lastBottomRow[2];\n\n    return lastBottomRowTop;\n  }\n\n  get fixedRightColumnsWidth() {\n    if (!this.state.cells || this.state.cells.rightColumns.length === 0) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.rightColumns[this.state.cells.rightColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get fixedLeftColumnsWidth() {\n    if (!this.state.cells || !this.state.cells.leftColumns.length) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.leftColumns[this.state.cells.leftColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get scrollbarSize() {\n    if (this._scrollbarSize == null) {\n      this._scrollbarSize = Math.max(15, this._scrollInner.offsetHeight - this._scrollInner.clientHeight);\n    }\n\n    return this._scrollbarSize;\n  }\n\n  elementPosition(el) {\n    let x = 0;\n    let y = 0;\n\n    while (el) {\n      x += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n      y += (el.offsetTop - el.scrollTop + el.clientTop);\n      el = el.offsetParent;\n    }\n\n    return { left: x, top: y };\n  }\n\n  isOverScrollbar(x, y) {\n    const scrollbarSize = this.scrollbarSize;\n\n    return (x >= this._root.offsetWidth - scrollbarSize) ||\n           (y >= this._root.offsetHeight - scrollbarSize);\n  }\n\n  handleRootMouseMove = (event) => {\n    const position = this.elementPosition(event.currentTarget);\n\n    const x = event.clientX - position.left;\n    const y = event.clientY - position.top;\n\n    const isOverScrollbar = this.isOverScrollbar(x, y);\n\n    // when the mouse moves between the 2 regions, swap the pointer events\n    if (this._isOverScrollbar !== isOverScrollbar) {\n      if (isOverScrollbar) {\n        // when over the scrollbar area, enable the pointer events on the scroll area\n        this.enableScrollableAreaPointerEvents();\n      } else {\n        // when over the grid area, disable the pointer events on the scroll area so the cells are interactive\n        this.disableScrollableAreaPointerEventsSoon();\n      }\n    }\n\n    this._isOverScrollbar = isOverScrollbar;\n  }\n\n  enableScrollableAreaPointerEvents() {\n    clearTimeout(this._disableScrollableAreaPointerEventsDelay);\n    this._disableScrollableAreaPointerEventsDelay = null;\n\n    this._scrollOverlay.style.pointerEvents = 'auto';\n  }\n\n  disableScrollableAreaPointerEventsSoon() {\n    clearTimeout(this._disableScrollableAreaPointerEventsDelay);\n\n    this._disableScrollableAreaPointerEventsDelay = setTimeout(() => {\n      this._disableScrollableAreaPointerEventsDelay = null;\n\n      if (!this._isOverScrollbar) {\n        this.disableScrollableAreaPointerEventsNow();\n      }\n    }, POINTER_EVENTS_SCROLL_DELAY);\n  }\n\n  get isScrolling() {\n    return this._disableScrollableAreaPointerEventsDelay != null;\n  }\n\n  disableScrollableAreaPointerEventsNow() {\n    this._scrollOverlay.style.pointerEvents = 'none';\n  }\n\n  bindRoot = (node) => {\n    this._root = node;\n  }\n\n  bindScrollOverlay = (node) => {\n    this._scrollOverlay = node;\n  }\n\n  bindScrollInner = (node) => {\n    this._scrollInner = node;\n  }\n\n  bindLeftPane = (node) => {\n    this._leftPane = node;\n  }\n\n  bindLeftPaneHeader = (node) => {\n    this._leftPaneHeader = node;\n  }\n\n  bindLeftPaneFooter = (node) => {\n    this._leftPaneFooter = node;\n  }\n\n  bindLeftPaneBody = (node) => {\n    this._leftPaneBody = node;\n  }\n\n  bindRightPane = (node) => {\n    this._rightPane = node;\n  }\n\n  bindRightPaneHeader = (node) => {\n    this._rightPaneHeader = node;\n  }\n\n  bindRightPaneFooter = (node) => {\n    this._rightPaneFooter = node;\n  }\n\n  bindRightPaneBody = (node) => {\n    this._rightPaneBody = node;\n  }\n\n  bindCenterPane = (node) => {\n    this._centerPane = node;\n  }\n\n  bindCenterPaneHeader = (node) => {\n    this._centerPaneHeader = node;\n  }\n\n  bindCenterPaneFooter = (node) => {\n    this._centerPaneFooter = node;\n  }\n\n  bindCenterPaneBody = (node) => {\n    this._centerPaneBody = node;\n  }\n\n  handleResize = (event) => {\n    const {scrollTop, scrollLeft} = this._scrollInner;\n\n    this.update(scrollTop, scrollLeft);\n  }\n\n  handleScroll = (event) => {\n    const {scrollTop, scrollLeft} = event.target;\n\n    this.update(scrollTop, scrollLeft);\n  }\n\n  handleWheel = (event) => {\n    if (!this.isScrolling) {\n      this.enableScrollableAreaPointerEvents();\n      event.preventDefault();\n    }\n\n    this.disableScrollableAreaPointerEventsSoon();\n  }\n\n  handleColumnResizeStart = (column, width) => {\n    this._resizingColumn = column;\n\n    // this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResize = (column, width) => {\n    this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResizeEnd = () => {\n    this._resizingColumn = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeStart = (row, height) => {\n    this._resizingRow = row;\n\n    // this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResize = (row, height) => {\n    this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeEnd = () => {\n    this._resizingRow = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  invalidateSizes() {\n    this.calculator.invalidate();\n  }\n\n  refresh = (force) => {\n    const {scrollTop, scrollLeft} = this._scrollInner;\n\n    this.update(scrollTop, scrollLeft, force);\n  }\n\n  update(scrollTop, scrollLeft, force) {\n    const x = scrollLeft - this.props.preloadPixelsX;\n    const y = scrollTop - this.props.preloadPixelsY;\n\n    const bounds = {\n      left: Math.max(0, x),\n      top: Math.max(0, y),\n      width: this._root.clientWidth + (2 * this.props.preloadPixelsX) + (x < 0 ? x : 0),\n      height: this._root.clientHeight + (2 * this.props.preloadPixelsY) + (y < 0 ? y : 0)\n    };\n\n    const cells = this.calculator.cellsWithinBounds(bounds, this.props.rowCount, this.props.columnCount);\n\n    if (cells.changed || force) {\n      const fromRow = cells.rows.length ? cells.rows[0][0] : null;\n      const toRow = cells.rows.length ? cells.rows[cells.rows.length - 1][0] : null;\n      const fromColumn = cells.columns.length ? cells.columns[0][0] : null;\n      const toColumn = cells.columns.length ? cells.columns[cells.columns.length - 1][0] : null;\n\n      if (this.props.onExtentsChange) {\n        this.props.onExtentsChange(fromRow, toRow, fromColumn, toColumn);\n      }\n\n      this.setState({cells: cells});\n    }\n\n    if (this.state.cells) {\n      this.setScroll(scrollLeft, scrollTop);\n    }\n  }\n\n  setScroll(x, y) {\n    if (this._leftPaneBody) {\n      this._leftPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._rightPaneBody) {\n      this._rightPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._centerPaneHeader) {\n      this._centerPaneHeader.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneFooter) {\n      this._centerPaneFooter.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    this._centerPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    this._centerPaneBody.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n  }\n\n  get calculator() {\n    if (!this._calculator) {\n      this._calculator = new GridCalculator();\n      this._calculator.estimatedColumnWidth = this.props.estimatedColumnWidth;\n      this._calculator.estimatedRowHeight = this.props.estimatedRowHeight;\n      this._calculator.fixedLeftColumnCount = this.props.fixedLeftColumnCount;\n      this._calculator.fixedRightColumnCount = this.props.fixedRightColumnCount;\n      this._calculator.fixedHeaderCount = this.props.fixedHeaderCount;\n      this._calculator.fixedFooterCount = this.props.fixedFooterCount;\n      this._calculator.calculateRowHeight = this.calculateRowHeight;\n      this._calculator.calculateColumnWidth = this.calculateColumnWidth;\n    }\n\n    return this._calculator;\n  }\n\n  calculateRowHeight = (row) => {\n    if (this._pinnedRowHeights[row] != null) {\n      return this._pinnedRowHeights[row];\n    }\n\n    return this.props.rowHeight(row);\n  }\n\n  calculateColumnWidth = (column) => {\n    if (this._pinnedColumnWidths[column] != null) {\n      return this._pinnedColumnWidths[column];\n    }\n\n    return this.props.columnWidth(column);\n  }\n\n  renderCellRange(fromRow, toRow, fromColumn, toColumn, rows, columns) {\n    const cells = [];\n\n    const render = this.props.renderCell;\n\n    for (let row = toRow; row >= fromRow; --row) {\n      for (let column = toColumn; column >= fromColumn; --column) {\n        const rowData = rows[row - fromRow];\n        const columnData = columns[column - fromColumn];\n\n        cells.push(render(row, rowData, column, columnData, this));\n      }\n    }\n\n    return cells;\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  scrollOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden',\n    pointerEvents: 'none'\n  },\n\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'scroll',\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  gridBody: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  pane: {\n    position: 'absolute',\n    overflow: 'hidden'\n  },\n\n  columnResizeGuide: {\n    position: 'absolute',\n    top: 1,\n    bottom: 0,\n    width: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ew-resize',\n    borderRadius: 0\n  },\n\n  rowResizeGuide: {\n    position: 'absolute',\n    left: 1,\n    right: 0,\n    height: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ns-resize',\n    borderRadius: 0\n  }\n};\n\nGrid.styles = styles;\n"]}