{"version":3,"sources":["../src/grid.jsx"],"names":["Grid","props","_scrolling","_pinnedColumnWidths","_pinnedRowHeights","_sizeDetector","strategy","state","componentDidMount","listenTo","_root","handleResize","update","scrollOptions","disableMouse","bounce","scrollX","freeScroll","scrollbars","probeType","mouseWheel","preventDefault","interactiveScrollbars","_scroller","_scrollInner","on","handleScroll","handleScrollStart","handleScrollEnd","componentWillReceiveProps","nextProps","refresh","componentWillUnmount","uninstall","off","destroy","render","styles","contentStyle","scrollContent","position","width","calculateScrollableWidth","cells","height","calculateScrollableHeight","container","bindRoot","scrollOverlay","bindScrollOverlay","scrollContainer","bindScrollInner","gridBody","renderLeftPane","renderRightPane","renderCenterPane","renderColumnResizeGuide","renderRowResizeGuide","attrs","pane","left","fixedLeftColumnsWidth","bindLeftPane","renderLeftPaneHeader","renderLeftPaneFooter","renderLeftPaneBody","fixedLeftColumnCount","top","right","calculateFixedHeadersHeight","bindLeftPaneHeader","leftPaneHeaderContent","renderCellRange","fixedHeaderCount","topLeftRows","topLeftColumns","fixedFooterCount","bottom","calculateFixedFootersHeight","fromRow","rowCount","toRow","bindLeftPaneFooter","leftPaneFooterContent","bottomLeftRows","bottomLeftColumns","estimatedColumnWidth","estimatedRowHeight","translatedPane","leftRows","length","bindLeftPaneBody","leftPaneBodyContent","leftColumns","fixedRightColumnCount","fixedRightColumnsWidth","bindRightPane","renderRightPaneHeader","renderRightPaneFooter","renderRightPaneBody","fromColumn","columnCount","toColumn","bindRightPaneHeader","rightPaneHeaderContent","topRightRows","topRightColumns","bindRightPaneFooter","rightPaneFooterContent","bottomRightRows","bottomRightColumns","bindRightPaneBody","rightPaneBodyContent","rightRows","rightColumns","bindCenterPane","renderCenterPaneHeader","renderCenterPaneFooter","renderCenterPaneBody","overflow","topColumns","bindCenterPaneHeader","centerPaneHeaderContent","topRows","bottomColumns","bindCenterPaneFooter","bottomRows","rows","columns","bindCenterPaneBody","centerPaneBodyContent","_resizingColumn","column","find","cell","guideStyle","columnResizeGuide","_resizingRow","row","rowResizeGuide","lastColumn","lastRow","lastTopLeftRow","topOffset","lastBottomRow","lastBottomRowTop","invalidateSizes","calculator","invalidate","scrollTop","scrollLeft","force","x","preloadPixelsX","y","preloadPixelsY","bounds","Math","max","clientWidth","clientHeight","cellsWithinBounds","changed","onExtentsChange","setState","setScroll","scrollableWidth","scrollableHeight","_lastScrollableWidth","_lastScrollableHeight","diffY","diffX","setTimeout","updatedScrollLeft","updatedScrollTop","scrollTo","fixedHeadersHeight","_leftPaneBody","childNodes","style","_rightPaneBody","_centerPaneHeader","_centerPaneFooter","_centerPaneBody","_leftPane","_scrollOverlay","offsetHeight","_rightPane","offsetWidth","_centerPane","renderRow","rowData","columnRange","rowIndex","rowTop","rowStyle","renderCells","renderRows","rowRange","renderCell","visibleRowIndex","rowCells","visibleColumnIndex","columnData","push","lastOffset","_calculator","calculateRowHeight","calculateColumnWidth","Component","propTypes","PropTypes","number","isRequired","columnWidth","oneOfType","func","rowHeight","onScrollStart","onScroll","onScrollEnd","object","defaultProps","node","_leftPaneHeader","_leftPaneFooter","_rightPaneHeader","_rightPaneFooter","event","handleColumnResizeStart","handleColumnResize","min","handleColumnResizeEnd","handleRowResizeStart","handleRowResize","handleRowResizeEnd","backgroundColor","cursor","borderRadius"],"mappings":"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","file":"grid.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport GridCalculator from './grid-calculator';\nimport elementResizeDetector from 'element-resize-detector';\nimport IScroll from 'iscroll/build/iscroll-probe';\n\n/* eslint-disable react/no-unused-prop-types */\n\nexport default class Grid extends React.Component {\n  static propTypes = {\n    preloadPixelsX: React.PropTypes.number,\n\n    preloadPixelsY: React.PropTypes.number,\n\n    estimatedRowHeight: React.PropTypes.number,\n\n    estimatedColumnWidth: React.PropTypes.number,\n\n    columnCount: React.PropTypes.number.isRequired,\n\n    rowCount: React.PropTypes.number.isRequired,\n\n    fixedLeftColumnCount: React.PropTypes.number,\n\n    fixedRightColumnCount: React.PropTypes.number,\n\n    fixedHeaderCount: React.PropTypes.number,\n\n    fixedFooterCount: React.PropTypes.number,\n\n    columnWidth: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    rowHeight: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    renderRow: React.PropTypes.func,\n\n    renderRows: React.PropTypes.func,\n\n    renderCell: React.PropTypes.func,\n\n    renderCells: React.PropTypes.func,\n\n    onExtentsChange: React.PropTypes.func,\n\n    onScrollStart: React.PropTypes.func,\n\n    onScroll: React.PropTypes.func,\n\n    onScrollEnd: React.PropTypes.func,\n\n    scrollOptions: React.PropTypes.object\n  };\n\n  static defaultProps = {\n    preloadPixelsX: 0,\n    preloadPixelsY: 0,\n    fixedLeftColumnCount: 0,\n    fixedRightColumnCount: 0,\n    fixedHeaderCount: 0,\n    fixedFooterCount: 0,\n    estimatedColumnWidth: 130,\n    estimatedRowHeight: 30\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._scrolling = false;\n\n    this._pinnedColumnWidths = {};\n    this._pinnedRowHeights = {};\n\n    this._sizeDetector = elementResizeDetector({strategy: 'scroll'});\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._sizeDetector.listenTo(this._root, this.handleResize);\n\n    this.update(0, 0);\n\n    const scrollOptions = {\n      disableMouse: true,\n      bounce: false, // disable bounce because we're already customizing positioning\n      scrollX: true,\n      freeScroll: true,\n      scrollbars: true,\n      probeType: 3,\n      mouseWheel: true,\n      preventDefault: false,\n      interactiveScrollbars: true,\n      ...this.props.scrollOptions\n    };\n\n    this._scroller = new IScroll(this._scrollInner, scrollOptions);\n    this._scroller.on('scroll', this.handleScroll);\n    this._scroller.on('scrollStart', this.handleScrollStart);\n    this._scroller.on('scrollEnd', this.handleScrollEnd);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.refresh(true, nextProps);\n  }\n\n  componentWillUnmount() {\n    this._sizeDetector.uninstall(this._root);\n\n    this._scroller.off('scroll', this.handleScroll);\n    this._scroller.off('scrollStart', this.handleScrollStart);\n    this._scroller.off('scrollEnd', this.handleScrollEnd);\n    this._scroller.destroy();\n  }\n\n  render() {\n    const {styles} = Grid;\n\n    const contentStyle = {\n      ...styles.scrollContent,\n      position: 'absolute',\n      width: this.calculateScrollableWidth(this.props, this.state.cells),\n      height: this.calculateScrollableHeight(this.props, this.state.cells)\n    };\n\n    return (\n      <div style={styles.container}\n           ref={this.bindRoot}\n           key=\"grid-root\">\n        <div style={styles.scrollOverlay}\n             ref={this.bindScrollOverlay}\n             key=\"grid-scroll-overlay\">\n          <div className=\"scroll-inner\"\n               style={styles.scrollContainer}\n               ref={this.bindScrollInner}\n               key=\"grid-scroll-inner\">\n            <div className={cx('scroll-container')}\n                 style={contentStyle}\n                 key=\"grid-scroll-container\">\n              <div style={styles.gridBody}\n                   key=\"grid-scroll-body\">\n                {this.renderLeftPane()}\n                {this.renderRightPane()}\n                {this.renderCenterPane()}\n                {this.renderColumnResizeGuide()}\n                {this.renderRowResizeGuide()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      width: this.fixedLeftColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindLeftPane}\n           className={cx('left-pane')}\n           style={attrs}\n           key=\"grid-left-pane\">\n        {this.renderLeftPaneHeader()}\n        {this.renderLeftPaneFooter()}\n        {this.renderLeftPaneBody()}\n      </div>\n    );\n  }\n\n  renderLeftPaneHeader() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.calculateFixedHeadersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    return (\n      <div ref={this.bindLeftPaneHeader}\n           className={cx('left-pane-header')}\n           style={attrs}\n           key=\"grid-left-pane-header\">\n        <div className={cx(styles.leftPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-left-pane-header-content\">\n          {this.renderCellRange('left-pane-header', 0, this.props.fixedHeaderCount - 1, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.topLeftRows, this.state.cells.topLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneFooter() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindLeftPaneFooter}\n           className={cx('left-pane-footer')}\n           style={attrs}\n           key=\"grid-left-pane-footer\">\n        <div className={cx(styles.leftPaneFooterContent)}\n             style={contentStyle}\n             key=\"grid-left-pane-footer-content\">\n          {this.renderCellRange('left-pane-footer', fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.bottomLeftRows, this.state.cells.bottomLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneBody() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.calculateFixedHeadersHeight(this.state.cells),\n      right: 0,\n      bottom: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindLeftPaneBody}\n           className={cx('left-pane-body')}\n           style={attrs}\n           key=\"grid-left-pane-body\">\n        <div className={cx(styles.leftPaneBodyContent)}\n             style={contentStyle}\n             key=\"grid-left-pane-body-content\">\n          {this.renderCellRange('left-pane-body', fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.leftRows, this.state.cells.leftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPane() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      right: 0,\n      width: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindRightPane}\n           className={cx('right-pane')}\n           style={attrs}\n           key=\"grid-right-pane\">\n        {this.renderRightPaneHeader()}\n        {this.renderRightPaneFooter()}\n        {this.renderRightPaneBody()}\n      </div>\n    );\n  }\n\n  renderRightPaneHeader() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.calculateFixedHeadersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneHeader}\n           className={cx('right-pane-header')}\n           style={attrs}\n           key=\"grid-right-pane-header\">\n        <div className={cx(styles.rightPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-right-pane-header-content\">\n          {this.renderCellRange('right-pane-header', 0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRightRows, this.state.cells.topRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneFooter() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneFooter}\n           className={cx('right-pane-footer')}\n           style={attrs}\n           key=\"grid-right-pane-footer\">\n        <div className={cx(styles.rightPaneFooterContent)}\n             style={contentStyle}\n             key=\"grid-right-pane-footer-content\">\n          {this.renderCellRange('right-pane-footer', fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRightRows, this.state.cells.bottomRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneBody() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.calculateFixedHeadersHeight(this.state.cells),\n      right: 0,\n      bottom: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      top: -this.calculateFixedHeadersHeight(this.state.cells),\n      bottom: -this.calculateFixedFootersHeight(this.state.cells),\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindRightPaneBody}\n           className={cx('right-pane-body')}\n           style={attrs}\n           key=\"grid-right-pane-body\">\n        <div className={cx(styles.rightPaneBodyContent)}\n             style={contentStyle}\n             key=\"grid-right-pane-body-content\">\n          {this.renderCellRange('right-pane-body', fromRow, toRow, fromColumn, toColumn, this.state.cells.rightRows, this.state.cells.rightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: this.fixedLeftColumnsWidth,\n      right: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindCenterPane}\n           className={cx('center-pane')}\n           style={attrs}\n           key=\"grid-center-pane\">\n        {this.renderCenterPaneHeader()}\n        {this.renderCenterPaneFooter()}\n        {this.renderCenterPaneBody()}\n      </div>\n    );\n  }\n\n  renderCenterPaneHeader() {\n    if (!this.state.cells || this.props.fixedHeaderCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.calculateFixedHeadersHeight(this.state.cells),\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[0][0] : null;\n    const toColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[this.state.cells.topColumns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneHeader}\n           className={cx('center-pane-header')}\n           style={attrs}\n           key=\"grid-center-pane-header\">\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-center-pane-header-content\">\n          {this.renderCellRange('center-pane-header', 0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRows, this.state.cells.topColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneFooter() {\n    if (!this.state.cells || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.calculateFixedFootersHeight(this.state.cells),\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[0][0] : null;\n    const toColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[this.state.cells.bottomColumns.length - 1][0] : null;\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindCenterPaneFooter}\n           className={cx('center-pane-footer')}\n           style={attrs}\n           key=\"grid-center-pane-footer\">\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-center-pane-footer-content\">\n          {this.renderCellRange('center-pane-footer', fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRows, this.state.cells.bottomColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneBody() {\n    if (!this.state.cells) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.calculateFixedHeadersHeight(this.state.cells),\n      right: 0,\n      bottom: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      left: -this.fixedLeftColumnsWidth,\n      top: -this.calculateFixedHeadersHeight(this.state.cells),\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.rows.length ? this.state.cells.rows[0][0] : null;\n    const toRow = this.state.cells.rows.length ? this.state.cells.rows[this.state.cells.rows.length - 1][0] : null;\n\n    const fromColumn = this.state.cells.columns.length ? this.state.cells.columns[0][0] : null;\n    const toColumn = this.state.cells.columns.length ? this.state.cells.columns[this.state.cells.columns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneBody}\n           className={cx('center-pane-body')}\n           style={attrs}\n           key=\"grid-center-pane-body\">\n        <div className={cx(styles.centerPaneBodyContent)}\n             style={contentStyle}\n             key=\"grid-center-pane-body-content\">\n          {this.renderCellRange('center-pane-body', fromRow, toRow, fromColumn, toColumn, this.state.cells.rows, this.state.cells.columns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderColumnResizeGuide() {\n    if (this._resizingColumn == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const column = this.state.cells.columns.find((cell) => {\n      return cell[0] === this._resizingColumn;\n    });\n\n    const guideStyle = {\n      ...styles.columnResizeGuide,\n      left: column[1] + column[2] - 2\n    };\n\n    return (\n      <div style={guideStyle}\n           key=\"grid-column-resize-guide\" />\n    );\n  }\n\n  renderRowResizeGuide() {\n    if (this._resizingRow == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const row = this.state.cells.rows.find((cell) => {\n      return cell[0] === this._resizingRow;\n    });\n\n    const guideStyle = {\n      ...styles.rowResizeGuide,\n      top: row[1] + row[2] - 2\n    };\n\n    return (\n      <div style={guideStyle}\n           key=\"grid-row-resize-guide\" />\n    );\n  }\n\n  get isScrolling() {\n    return this._scrolling;\n  }\n\n  calculateScrollableWidth({estimatedColumnWidth, columnCount}, cells) {\n    if (!cells || !cells.columns.length) {\n      return estimatedColumnWidth * columnCount;\n    }\n\n    const lastColumn = cells.columns[cells.columns.length - 1];\n    const width = lastColumn[1] + lastColumn[2];\n\n    return width + (((columnCount - 1) - lastColumn[0]) * estimatedColumnWidth);\n  }\n\n  calculateScrollableHeight({estimatedRowHeight, rowCount}, cells) {\n    if (!cells || !cells.rows.length) {\n      return estimatedRowHeight * rowCount;\n    }\n\n    const lastRow = cells.rows[cells.rows.length - 1];\n    const height = lastRow[1] + lastRow[2];\n\n    return height + (((rowCount - 1) - lastRow[0]) * estimatedRowHeight);\n  }\n\n  calculateFixedHeadersHeight(cells) {\n    if (!cells || !cells.topLeftRows.length) {\n      return 0;\n    }\n\n    const lastTopLeftRow = cells.topLeftRows[cells.topLeftRows.length - 1];\n    const topOffset = lastTopLeftRow[1] + lastTopLeftRow[2];\n\n    return topOffset;\n  }\n\n  calculateFixedFootersHeight(cells) {\n    if (!cells || !cells.bottomLeftRows.length) {\n      return 0;\n    }\n\n    const lastBottomRow = cells.bottomLeftRows[cells.bottomLeftRows.length - 1];\n    const lastBottomRowTop = lastBottomRow[1] + lastBottomRow[2];\n\n    return lastBottomRowTop;\n  }\n\n  get fixedRightColumnsWidth() {\n    if (!this.state.cells || this.state.cells.rightColumns.length === 0) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.rightColumns[this.state.cells.rightColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get fixedLeftColumnsWidth() {\n    if (!this.state.cells || !this.state.cells.leftColumns.length) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.leftColumns[this.state.cells.leftColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  bindRoot = (node) => {\n    this._root = node;\n  }\n\n  bindScrollOverlay = (node) => {\n    this._scrollOverlay = node;\n  }\n\n  bindScrollInner = (node) => {\n    this._scrollInner = node;\n  }\n\n  bindLeftPane = (node) => {\n    this._leftPane = node;\n  }\n\n  bindLeftPaneHeader = (node) => {\n    this._leftPaneHeader = node;\n  }\n\n  bindLeftPaneFooter = (node) => {\n    this._leftPaneFooter = node;\n  }\n\n  bindLeftPaneBody = (node) => {\n    this._leftPaneBody = node;\n  }\n\n  bindRightPane = (node) => {\n    this._rightPane = node;\n  }\n\n  bindRightPaneHeader = (node) => {\n    this._rightPaneHeader = node;\n  }\n\n  bindRightPaneFooter = (node) => {\n    this._rightPaneFooter = node;\n  }\n\n  bindRightPaneBody = (node) => {\n    this._rightPaneBody = node;\n  }\n\n  bindCenterPane = (node) => {\n    this._centerPane = node;\n  }\n\n  bindCenterPaneHeader = (node) => {\n    this._centerPaneHeader = node;\n  }\n\n  bindCenterPaneFooter = (node) => {\n    this._centerPaneFooter = node;\n  }\n\n  bindCenterPaneBody = (node) => {\n    this._centerPaneBody = node;\n  }\n\n  handleResize = (event) => {\n    this.update(this.scrollTop, this.scrollLeft);\n  }\n\n  handleScroll = (event) => {\n    this.update(this.scrollTop, this.scrollLeft);\n\n    if (this.props.onScroll) {\n      this.props.onScroll(this);\n    }\n  }\n\n  handleScrollStart = (event) => {\n    this._scrolling = true;\n\n    if (this.props.onScrollStart) {\n      this.props.onScrollStart(this);\n    }\n  }\n\n  handleScrollEnd = (event) => {\n    this._scrolling = false;\n\n    if (this.props.onScrollEnd) {\n      this.props.onScrollEnd(this);\n    }\n  }\n\n  handleColumnResizeStart = (column, width) => {\n    this._resizingColumn = column;\n\n    // this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResize = (column, width) => {\n    this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResizeEnd = () => {\n    this._resizingColumn = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeStart = (row, height) => {\n    this._resizingRow = row;\n\n    // this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResize = (row, height) => {\n    this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeEnd = () => {\n    this._resizingRow = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  invalidateSizes() {\n    this.calculator.invalidate();\n  }\n\n  refresh = (force, props) => {\n    this.update(this.scrollTop, this.scrollLeft, force, props || this.props);\n  }\n\n  update(scrollTop, scrollLeft, force, props) {\n    props = props || this.props;\n\n    const x = scrollLeft - props.preloadPixelsX;\n    const y = scrollTop - props.preloadPixelsY;\n\n    const bounds = {\n      left: Math.max(0, x),\n      top: Math.max(0, y),\n      width: this._root.clientWidth + (2 * props.preloadPixelsX) + (x < 0 ? x : 0),\n      height: this._root.clientHeight + (2 * props.preloadPixelsY) + (y < 0 ? y : 0)\n    };\n\n    const cells = this.calculator.cellsWithinBounds(bounds, props.rowCount, props.columnCount);\n\n    if (cells.changed || force) {\n      const fromRow = cells.rows.length ? cells.rows[0][0] : null;\n      const toRow = cells.rows.length ? cells.rows[cells.rows.length - 1][0] : null;\n      const fromColumn = cells.columns.length ? cells.columns[0][0] : null;\n      const toColumn = cells.columns.length ? cells.columns[cells.columns.length - 1][0] : null;\n\n      if (props.onExtentsChange) {\n        props.onExtentsChange(fromRow, toRow, fromColumn, toColumn);\n      }\n\n      this.setState({cells: cells});\n    }\n\n    if (cells) {\n      this.setScroll(scrollLeft, scrollTop, cells);\n    }\n\n    const scrollableWidth = this.calculateScrollableWidth(props, cells);\n    const scrollableHeight = this.calculateScrollableHeight(props, cells);\n\n    // if the srollable width or height changes, refresh the scroller\n    if (force || this._lastScrollableWidth !== scrollableWidth || this._lastScrollableHeight !== scrollableHeight) {\n      this._lastScrollableWidth = scrollableWidth;\n      this._lastScrollableHeight = scrollableHeight;\n\n      // if there were no cells, there might be more cells above. This handles a case where the table renders at a scroll\n      // offset with no data. For example, scroll down in a huge list of a results, then filter it to only a few results.\n      // The scroll view is left at a large offset but there's no data. Because we don't know how far we'd have to move\n      // up to find data, the simplest thing to do is to go to position 0, 0.\n      const diffY = Math.max(0, (scrollTop + this._root.clientHeight) - Math.max(this._root.clientHeight, scrollableHeight));\n      const diffX = Math.max(0, (scrollLeft + this._root.clientWidth) - Math.max(this._root.clientWidth, scrollableWidth));\n\n      setTimeout(() => {\n        if (diffY > 0 || diffX > 0) {\n          const updatedScrollLeft = scrollLeft - diffX;\n          const updatedScrollTop = scrollTop - diffY;\n\n          this._scroller.scrollTo(-updatedScrollLeft, -updatedScrollTop);\n          this.update(updatedScrollTop, updatedScrollLeft);\n        }\n\n        this._scroller.refresh();\n      }, 1);\n    }\n  }\n\n  setScroll(x, y, cells) {\n    const fixedHeadersHeight = this.calculateFixedHeadersHeight(cells);\n\n    if (this._leftPaneBody) {\n      this._leftPaneBody.childNodes[0].style.top = (-y - fixedHeadersHeight) + 'px';\n    }\n\n    if (this._rightPaneBody) {\n      this._rightPaneBody.childNodes[0].style.top = (-y - fixedHeadersHeight) + 'px';\n    }\n\n    if (this._centerPaneHeader) {\n      this._centerPaneHeader.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneFooter) {\n      this._centerPaneFooter.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneBody) {\n      this._centerPaneBody.childNodes[0].style.top = (-y - fixedHeadersHeight) + 'px';\n      this._centerPaneBody.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._leftPane) {\n      this._leftPane.style.left = x + 'px';\n      this._leftPane.style.top = y + 'px';\n      this._leftPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    }\n\n    if (this._rightPane) {\n      this._rightPane.style.left = (x + this._scrollOverlay.offsetWidth - this.fixedRightColumnsWidth) + 'px';\n      this._rightPane.style.top = y + 'px';\n      this._rightPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    }\n\n    if (this._centerPane) {\n      this._centerPane.style.left = (x + this.fixedLeftColumnsWidth) + 'px';\n      this._centerPane.style.top = y + 'px';\n      this._centerPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n      this._centerPane.style.width = (this._scrollOverlay.offsetWidth - this.fixedRightColumnsWidth - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._scrollInner) {\n      if (this._scrollInner.childNodes[0].offsetHeight < this._scrollInner.offsetHeight) {\n        this._scrollInner.childNodes[0].style.height = this._scrollInner.offsetHeight + 'px';\n      }\n\n      if (this._scrollInner.childNodes[0].offsetWidth < this._scrollInner.offsetWidth) {\n        this._scrollInner.childNodes[0].style.width = this._scrollInner.offsetWidth + 'px';\n      }\n    }\n  }\n\n  get calculator() {\n    if (!this._calculator) {\n      this._calculator = new GridCalculator();\n      this._calculator.estimatedColumnWidth = this.props.estimatedColumnWidth;\n      this._calculator.estimatedRowHeight = this.props.estimatedRowHeight;\n      this._calculator.fixedLeftColumnCount = this.props.fixedLeftColumnCount;\n      this._calculator.fixedRightColumnCount = this.props.fixedRightColumnCount;\n      this._calculator.fixedHeaderCount = this.props.fixedHeaderCount;\n      this._calculator.fixedFooterCount = this.props.fixedFooterCount;\n      this._calculator.calculateRowHeight = this.calculateRowHeight;\n      this._calculator.calculateColumnWidth = this.calculateColumnWidth;\n    }\n\n    return this._calculator;\n  }\n\n  calculateRowHeight = (row) => {\n    if (this._pinnedRowHeights[row] != null) {\n      return this._pinnedRowHeights[row];\n    }\n\n    return this.props.rowHeight(row);\n  }\n\n  calculateColumnWidth = (column) => {\n    if (this._pinnedColumnWidths[column] != null) {\n      return this._pinnedColumnWidths[column];\n    }\n\n    return this.props.columnWidth(column);\n  }\n\n  renderRow(pane, cells, rowData, columnRange) {\n    const [ rowIndex, rowTop, height ] = rowData;\n\n    const rowStyle = {\n      position: 'absolute',\n      left: 0,\n      top: rowTop,\n      height: height\n    };\n\n    const renderCells = this.props.renderCells || this.renderCells;\n\n    return (\n      <div key={'row-' + rowIndex}\n           style={rowStyle}>\n        {renderCells(cells)}\n      </div>\n    );\n  }\n\n  renderCells(cells) {\n    return cells;\n  }\n\n  renderRows(rows) {\n    return rows;\n  }\n\n  renderCellRange(pane, fromRow, toRow, fromColumn, toColumn, rows, columns) {\n    const rowRange = [];\n\n    const renderCell = this.props.renderCell;\n    const renderRow = this.props.renderRow || this.renderRow;\n    const renderRows = this.props.renderRows || this.renderRows;\n\n    for (let row = toRow, visibleRowIndex = 0; row >= fromRow; --row, ++visibleRowIndex) {\n      const rowCells = [];\n      const rowData = rows[row - fromRow];\n      const columnRange = [];\n\n      for (let column = toColumn, visibleColumnIndex = 0; column >= fromColumn; --column, ++visibleColumnIndex) {\n        const columnData = columns[column - fromColumn];\n\n        columnRange.push(columnData);\n\n        rowCells.push(renderCell(pane, row, rowData, column, columnData, this, visibleRowIndex, visibleColumnIndex));\n      }\n\n      rowRange.push(renderRow(pane, rowCells, rowData, columnRange));\n    }\n\n    return renderRows(rowRange);\n  }\n\n  get scrollTop() {\n    return -this._scroller.y;\n  }\n\n  get scrollLeft() {\n    return -this._scroller.x;\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  scrollOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  gridBody: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  pane: {\n    position: 'absolute',\n    overflow: 'hidden'\n  },\n\n  translatedPane: {\n  },\n\n  columnResizeGuide: {\n    position: 'absolute',\n    top: 1,\n    bottom: 0,\n    width: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ew-resize',\n    borderRadius: 0\n  },\n\n  rowResizeGuide: {\n    position: 'absolute',\n    left: 1,\n    right: 0,\n    height: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ns-resize',\n    borderRadius: 0\n  }\n};\n\nGrid.styles = styles;\n"]}