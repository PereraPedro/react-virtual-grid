{"version":3,"sources":["../src/grid.jsx"],"names":["Grid","props","bindRoot","node","_root","bindScrollOverlay","_scrollOverlay","bindScrollInner","_scrollInner","bindLeftPane","_leftPane","bindLeftPaneHeader","_leftPaneHeader","bindLeftPaneFooter","_leftPaneFooter","bindLeftPaneBody","_leftPaneBody","bindRightPane","_rightPane","bindRightPaneHeader","_rightPaneHeader","bindRightPaneFooter","_rightPaneFooter","bindRightPaneBody","_rightPaneBody","bindCenterPane","_centerPane","bindCenterPaneHeader","_centerPaneHeader","bindCenterPaneFooter","_centerPaneFooter","bindCenterPaneBody","_centerPaneBody","handleResize","event","update","scrollTop","scrollLeft","handleScroll","handleColumnResizeStart","column","width","_resizingColumn","invalidateSizes","refresh","handleColumnResize","_pinnedColumnWidths","Math","min","max","handleColumnResizeEnd","handleRowResizeStart","row","height","_resizingRow","handleRowResize","_pinnedRowHeights","handleRowResizeEnd","force","calculateRowHeight","rowHeight","calculateColumnWidth","columnWidth","_sizeDetector","strategy","state","componentDidMount","listenTo","scrollOptions","disableMouse","bounce","scrollX","freeScroll","scrollbars","probeType","mouseWheel","preventDefault","interactiveScrollbars","_scroller","on","componentWillUnmount","uninstall","render","styles","contentStyle","scrollContent","position","scrollableWidth","scrollableHeight","container","scrollOverlay","scrollContainer","gridBody","renderLeftPane","renderRightPane","renderCenterPane","renderColumnResizeGuide","renderRowResizeGuide","attrs","pane","left","fixedLeftColumnsWidth","renderLeftPaneHeader","renderLeftPaneFooter","renderLeftPaneBody","cells","fixedLeftColumnCount","top","right","fixedHeadersHeight","leftPaneHeaderContent","renderCellRange","fixedHeaderCount","topLeftRows","topLeftColumns","fixedFooterCount","bottom","fixedFootersHeight","fromRow","rowCount","toRow","leftPaneFooterContent","bottomLeftRows","bottomLeftColumns","estimatedColumnWidth","estimatedRowHeight","translatedPane","leftRows","length","leftPaneBodyContent","leftColumns","fixedRightColumnCount","fixedRightColumnsWidth","renderRightPaneHeader","renderRightPaneFooter","renderRightPaneBody","fromColumn","columnCount","toColumn","rightPaneHeaderContent","topRightRows","topRightColumns","rightPaneFooterContent","bottomRightRows","bottomRightColumns","rightPaneBodyContent","rightRows","rightColumns","renderCenterPaneHeader","renderCenterPaneFooter","renderCenterPaneBody","overflow","topColumns","centerPaneHeaderContent","topRows","bottomColumns","bottomRows","rows","columns","centerPaneBodyContent","find","cell","guideStyle","columnResizeGuide","rowResizeGuide","calculator","invalidate","x","preloadPixelsX","y","preloadPixelsY","bounds","clientWidth","clientHeight","cellsWithinBounds","changed","onExtentsChange","setState","setScroll","_lastScrollableWidth","_lastScrollableHeight","setTimeout","childNodes","style","offsetHeight","offsetWidth","renderCell","rowData","columnData","push","lastColumn","lastRow","lastTopLeftRow","topOffset","lastBottomRow","lastBottomRowTop","lastOffset","_calculator","Component","propTypes","PropTypes","number","isRequired","oneOfType","func","defaultProps","backgroundColor","cursor","borderRadius"],"mappings":"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","file":"grid.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport GridCalculator from './grid-calculator';\nimport elementResizeDetector from 'element-resize-detector';\nimport IScroll from 'iscroll/build/iscroll-probe';\n\nexport default class Grid extends React.Component {\n  static propTypes = {\n    preloadPixelsX: React.PropTypes.number,\n\n    preloadPixelsY: React.PropTypes.number,\n\n    estimatedRowHeight: React.PropTypes.number,\n\n    estimatedColumnWidth: React.PropTypes.number,\n\n    columnCount: React.PropTypes.number.isRequired,\n\n    rowCount: React.PropTypes.number.isRequired,\n\n    fixedLeftColumnCount: React.PropTypes.number,\n\n    fixedRightColumnCount: React.PropTypes.number,\n\n    fixedHeaderCount: React.PropTypes.number,\n\n    fixedFooterCount: React.PropTypes.number,\n\n    columnWidth: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    rowHeight: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    renderCell: React.PropTypes.func,\n\n    onExtentsChange: React.PropTypes.func\n  };\n\n  static defaultProps = {\n    preloadPixelsX: 0,\n    preloadPixelsY: 0,\n    fixedLeftColumnCount: 0,\n    fixedRightColumnCount: 0,\n    fixedHeaderCount: 0,\n    fixedFooterCount: 0,\n    estimatedColumnWidth: 130,\n    estimatedRowHeight: 30\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._pinnedColumnWidths = {};\n    this._pinnedRowHeights = {};\n\n    this._sizeDetector = elementResizeDetector({strategy: 'scroll'});\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._sizeDetector.listenTo(this._root, this.handleResize);\n\n    this.update(0, 0);\n\n    const scrollOptions = {\n      disableMouse: true,\n      bounce: false, // disable bounce because we're already customizing positioning\n      scrollX: true,\n      freeScroll: true,\n      scrollbars: true,\n      probeType: 3,\n      mouseWheel: true,\n      preventDefault: false,\n      interactiveScrollbars: true\n    };\n\n    this._scroller = new IScroll(this._scrollInner, scrollOptions);\n    this._scroller.on('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    this._sizeDetector.uninstall(this._root);\n  }\n\n  render() {\n    const {styles} = Grid;\n\n    const contentStyle = {\n      ...styles.scrollContent,\n      position: 'absolute',\n      width: this.scrollableWidth,\n      height: this.scrollableHeight\n    };\n\n    return (\n      <div style={styles.container}\n           ref={this.bindRoot}>\n        <div style={styles.scrollOverlay}\n             ref={this.bindScrollOverlay}>\n          <div className=\"scroll-inner\"\n               style={styles.scrollContainer}\n               ref={this.bindScrollInner}>\n            <div className={cx('scroll-container')}\n                 style={contentStyle}>\n              <div style={styles.gridBody}>\n                {this.renderLeftPane()}\n                {this.renderRightPane()}\n                {this.renderCenterPane()}\n                {this.renderColumnResizeGuide()}\n                {this.renderRowResizeGuide()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      width: this.fixedLeftColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindLeftPane}\n           className={cx('left-pane')}\n           style={attrs}>\n        {this.renderLeftPaneHeader()}\n        {this.renderLeftPaneFooter()}\n        {this.renderLeftPaneBody()}\n      </div>\n    );\n  }\n\n  renderLeftPaneHeader() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    return (\n      <div ref={this.bindLeftPaneHeader}\n           className={cx('left-pane-header')}\n           style={attrs}>\n        <div className={cx(styles.leftPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.topLeftRows, this.state.cells.topLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneFooter() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindLeftPaneFooter}\n           className={cx('left-pane-footer')}\n           style={attrs}>\n        <div className={cx(styles.leftPaneFooterContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.bottomLeftRows, this.state.cells.bottomLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneBody() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindLeftPaneBody}\n           className={cx('left-pane-body')}\n           style={attrs}>\n        <div className={cx(styles.leftPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.leftRows, this.state.cells.leftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPane() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      right: 0,\n      width: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindRightPane}\n           className={cx('right-pane')}\n           style={attrs}>\n        {this.renderRightPaneHeader()}\n        {this.renderRightPaneFooter()}\n        {this.renderRightPaneBody()}\n      </div>\n    );\n  }\n\n  renderRightPaneHeader() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneHeader}\n           className={cx('right-pane-header')}\n           style={attrs}>\n        <div className={cx(styles.rightPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRightRows, this.state.cells.topRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneFooter() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneFooter}\n           className={cx('right-pane-footer')}\n           style={attrs}>\n        <div className={cx(styles.rightPaneFooterContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRightRows, this.state.cells.bottomRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneBody() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      top: -this.fixedHeadersHeight,\n      bottom: -this.fixedFootersHeight,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindRightPaneBody}\n           className={cx('right-pane-body')}\n           style={attrs}>\n        <div className={cx(styles.rightPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rightRows, this.state.cells.rightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: this.fixedLeftColumnsWidth,\n      right: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindCenterPane}\n           className={cx('center-pane')}\n           style={attrs}>\n        {this.renderCenterPaneHeader()}\n        {this.renderCenterPaneFooter()}\n        {this.renderCenterPaneBody()}\n      </div>\n    );\n  }\n\n  renderCenterPaneHeader() {\n    if (!this.state.cells || this.props.fixedHeaderCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight,\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[0][0] : null;\n    const toColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[this.state.cells.topColumns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneHeader}\n           className={cx('center-pane-header')}\n           style={attrs}>\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRows, this.state.cells.topColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneFooter() {\n    if (!this.state.cells || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight,\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[0][0] : null;\n    const toColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[this.state.cells.bottomColumns.length - 1][0] : null;\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindCenterPaneFooter}\n           className={cx('center-pane-footer')}\n           style={attrs}>\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRows, this.state.cells.bottomColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneBody() {\n    if (!this.state.cells) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      left: -this.fixedLeftColumnsWidth,\n      top: -this.fixedHeadersHeight,\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.rows.length ? this.state.cells.rows[0][0] : null;\n    const toRow = this.state.cells.rows.length ? this.state.cells.rows[this.state.cells.rows.length - 1][0] : null;\n\n    const fromColumn = this.state.cells.columns.length ? this.state.cells.columns[0][0] : null;\n    const toColumn = this.state.cells.columns.length ? this.state.cells.columns[this.state.cells.columns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneBody}\n           className={cx('center-pane-body')}\n           style={attrs}>\n        <div className={cx(styles.centerPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rows, this.state.cells.columns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderColumnResizeGuide() {\n    if (this._resizingColumn == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const column = this.state.cells.columns.find((cell) => {\n      return cell[0] === this._resizingColumn;\n    });\n\n    const guideStyle = {\n      ...styles.columnResizeGuide,\n      left: column[1] + column[2] - 2\n    };\n\n    return (\n      <div style={guideStyle} />\n    );\n  }\n\n  renderRowResizeGuide() {\n    if (this._resizingRow == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const row = this.state.cells.rows.find((cell) => {\n      return cell[0] === this._resizingRow;\n    });\n\n    const guideStyle = {\n      ...styles.rowResizeGuide,\n      top: row[1] + row[2] - 2\n    };\n\n    return (\n      <div style={guideStyle} />\n    );\n  }\n\n  get scrollableWidth() {\n    if (!this.state.cells || !this.state.cells.columns.length) {\n      return this.props.estimatedColumnWidth * this.props.columnCount;\n    }\n\n    const lastColumn = this.state.cells.columns[this.state.cells.columns.length - 1];\n    const width = lastColumn[1] + lastColumn[2];\n\n    return width + (((this.props.columnCount - 1) - lastColumn[0]) * this.props.estimatedColumnWidth);\n  }\n\n  get scrollableHeight() {\n    if (!this.state.cells || !this.state.cells.rows.length) {\n      return this.props.estimatedRowHeight * this.props.rowCount;\n    }\n\n    const lastRow = this.state.cells.rows[this.state.cells.rows.length - 1];\n    const height = lastRow[1] + lastRow[2];\n\n    return height + (((this.props.rowCount - 1) - lastRow[0]) * this.props.estimatedRowHeight);\n  }\n\n  get fixedHeadersHeight() {\n    if (!this.state.cells || !this.state.cells.topLeftRows.length) {\n      return 0;\n    }\n\n    const lastTopLeftRow = this.state.cells.topLeftRows[this.state.cells.topLeftRows.length - 1];\n    const topOffset = lastTopLeftRow[1] + lastTopLeftRow[2];\n\n    return topOffset;\n  }\n\n  get fixedFootersHeight() {\n    if (!this.state.cells || !this.state.cells.bottomLeftRows.length) {\n      return 0;\n    }\n\n    const lastBottomRow = this.state.cells.bottomLeftRows[this.state.cells.bottomLeftRows.length - 1];\n    const lastBottomRowTop = lastBottomRow[1] + lastBottomRow[2];\n\n    return lastBottomRowTop;\n  }\n\n  get fixedRightColumnsWidth() {\n    if (!this.state.cells || this.state.cells.rightColumns.length === 0) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.rightColumns[this.state.cells.rightColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get fixedLeftColumnsWidth() {\n    if (!this.state.cells || !this.state.cells.leftColumns.length) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.leftColumns[this.state.cells.leftColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  bindRoot = (node) => {\n    this._root = node;\n  }\n\n  bindScrollOverlay = (node) => {\n    this._scrollOverlay = node;\n  }\n\n  bindScrollInner = (node) => {\n    this._scrollInner = node;\n  }\n\n  bindLeftPane = (node) => {\n    this._leftPane = node;\n  }\n\n  bindLeftPaneHeader = (node) => {\n    this._leftPaneHeader = node;\n  }\n\n  bindLeftPaneFooter = (node) => {\n    this._leftPaneFooter = node;\n  }\n\n  bindLeftPaneBody = (node) => {\n    this._leftPaneBody = node;\n  }\n\n  bindRightPane = (node) => {\n    this._rightPane = node;\n  }\n\n  bindRightPaneHeader = (node) => {\n    this._rightPaneHeader = node;\n  }\n\n  bindRightPaneFooter = (node) => {\n    this._rightPaneFooter = node;\n  }\n\n  bindRightPaneBody = (node) => {\n    this._rightPaneBody = node;\n  }\n\n  bindCenterPane = (node) => {\n    this._centerPane = node;\n  }\n\n  bindCenterPaneHeader = (node) => {\n    this._centerPaneHeader = node;\n  }\n\n  bindCenterPaneFooter = (node) => {\n    this._centerPaneFooter = node;\n  }\n\n  bindCenterPaneBody = (node) => {\n    this._centerPaneBody = node;\n  }\n\n  handleResize = (event) => {\n    this.update(this.scrollTop, this.scrollLeft);\n  }\n\n  handleScroll = (event) => {\n    this.update(this.scrollTop, this.scrollLeft);\n  }\n\n  handleColumnResizeStart = (column, width) => {\n    this._resizingColumn = column;\n\n    // this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResize = (column, width) => {\n    this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResizeEnd = () => {\n    this._resizingColumn = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeStart = (row, height) => {\n    this._resizingRow = row;\n\n    // this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResize = (row, height) => {\n    this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeEnd = () => {\n    this._resizingRow = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  invalidateSizes() {\n    this.calculator.invalidate();\n  }\n\n  refresh = (force) => {\n    this.update(this.scrollTop, this.scrollLeft, force);\n  }\n\n  update(scrollTop, scrollLeft, force) {\n    const x = scrollLeft - this.props.preloadPixelsX;\n    const y = scrollTop - this.props.preloadPixelsY;\n\n    const bounds = {\n      left: Math.max(0, x),\n      top: Math.max(0, y),\n      width: this._root.clientWidth + (2 * this.props.preloadPixelsX) + (x < 0 ? x : 0),\n      height: this._root.clientHeight + (2 * this.props.preloadPixelsY) + (y < 0 ? y : 0)\n    };\n\n    const cells = this.calculator.cellsWithinBounds(bounds, this.props.rowCount, this.props.columnCount);\n\n    if (cells.changed || force) {\n      const fromRow = cells.rows.length ? cells.rows[0][0] : null;\n      const toRow = cells.rows.length ? cells.rows[cells.rows.length - 1][0] : null;\n      const fromColumn = cells.columns.length ? cells.columns[0][0] : null;\n      const toColumn = cells.columns.length ? cells.columns[cells.columns.length - 1][0] : null;\n\n      if (this.props.onExtentsChange) {\n        this.props.onExtentsChange(fromRow, toRow, fromColumn, toColumn);\n      }\n\n      this.setState({cells: cells});\n    }\n\n    if (this.state.cells) {\n      this.setScroll(scrollLeft, scrollTop);\n    }\n\n    const scrollableWidth = this.scrollableWidth;\n    const scrollableHeight = this.scrollableHeight;\n\n    // if the srollable width or height changes, refresh the scroller\n    if (force || this._lastScrollableWidth !== scrollableWidth || this._lastScrollableHeight !== scrollableHeight) {\n      this._lastScrollableWidth = scrollableWidth;\n      this._lastScrollableHeight = scrollableHeight;\n\n      setTimeout(() => this._scroller.refresh(), 0);\n    }\n  }\n\n  setScroll(x, y) {\n    if (this._leftPaneBody) {\n      this._leftPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._rightPaneBody) {\n      this._rightPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._centerPaneHeader) {\n      this._centerPaneHeader.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneFooter) {\n      this._centerPaneFooter.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    this._centerPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    this._centerPaneBody.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n\n    if (this._leftPane) {\n      this._leftPane.style.left = x + 'px';\n      this._leftPane.style.top = y + 'px';\n      this._leftPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    }\n\n    if (this._rightPane) {\n      this._rightPane.style.left = (x + this._scrollOverlay.offsetWidth - this.fixedRightColumnsWidth) + 'px';\n      this._rightPane.style.top = y + 'px';\n      this._rightPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    }\n\n    this._centerPane.style.left = (x + this.fixedLeftColumnsWidth) + 'px';\n    this._centerPane.style.top = y + 'px';\n    this._centerPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    this._centerPane.style.width = (this._scrollOverlay.offsetWidth - this.fixedRightColumnsWidth - this.fixedLeftColumnsWidth) + 'px';\n  }\n\n  get calculator() {\n    if (!this._calculator) {\n      this._calculator = new GridCalculator();\n      this._calculator.estimatedColumnWidth = this.props.estimatedColumnWidth;\n      this._calculator.estimatedRowHeight = this.props.estimatedRowHeight;\n      this._calculator.fixedLeftColumnCount = this.props.fixedLeftColumnCount;\n      this._calculator.fixedRightColumnCount = this.props.fixedRightColumnCount;\n      this._calculator.fixedHeaderCount = this.props.fixedHeaderCount;\n      this._calculator.fixedFooterCount = this.props.fixedFooterCount;\n      this._calculator.calculateRowHeight = this.calculateRowHeight;\n      this._calculator.calculateColumnWidth = this.calculateColumnWidth;\n    }\n\n    return this._calculator;\n  }\n\n  calculateRowHeight = (row) => {\n    if (this._pinnedRowHeights[row] != null) {\n      return this._pinnedRowHeights[row];\n    }\n\n    return this.props.rowHeight(row);\n  }\n\n  calculateColumnWidth = (column) => {\n    if (this._pinnedColumnWidths[column] != null) {\n      return this._pinnedColumnWidths[column];\n    }\n\n    return this.props.columnWidth(column);\n  }\n\n  renderCellRange(fromRow, toRow, fromColumn, toColumn, rows, columns) {\n    const cells = [];\n\n    const render = this.props.renderCell;\n\n    for (let row = toRow; row >= fromRow; --row) {\n      for (let column = toColumn; column >= fromColumn; --column) {\n        const rowData = rows[row - fromRow];\n        const columnData = columns[column - fromColumn];\n\n        cells.push(render(row, rowData, column, columnData, this));\n      }\n    }\n\n    return cells;\n  }\n\n  get scrollTop() {\n    return -this._scroller.y;\n  }\n\n  get scrollLeft() {\n    return -this._scroller.x;\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  scrollOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  gridBody: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  pane: {\n    position: 'absolute',\n    overflow: 'hidden'\n  },\n\n  translatedPane: {\n  },\n\n  columnResizeGuide: {\n    position: 'absolute',\n    top: 1,\n    bottom: 0,\n    width: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ew-resize',\n    borderRadius: 0\n  },\n\n  rowResizeGuide: {\n    position: 'absolute',\n    left: 1,\n    right: 0,\n    height: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ns-resize',\n    borderRadius: 0\n  }\n};\n\nGrid.styles = styles;\n"]}