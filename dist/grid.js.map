{"version":3,"sources":["../src/grid.jsx"],"names":["POINTER_EVENTS_SCROLL_DELAY","Grid","props","handleRootMouseMove","event","position","elementPosition","currentTarget","x","clientX","left","y","clientY","top","isOverScrollbar","_isOverScrollbar","enableScrollableAreaPointerEvents","disableScrollableAreaPointerEventsSoon","bindRoot","node","_root","bindScrollOverlay","_scrollOverlay","bindScrollInner","_scrollInner","bindLeftPane","_leftPane","bindLeftPaneHeader","_leftPaneHeader","bindLeftPaneFooter","_leftPaneFooter","bindLeftPaneBody","_leftPaneBody","bindRightPane","_rightPane","bindRightPaneHeader","_rightPaneHeader","bindRightPaneFooter","_rightPaneFooter","bindRightPaneBody","_rightPaneBody","bindCenterPane","_centerPane","bindCenterPaneHeader","_centerPaneHeader","bindCenterPaneFooter","_centerPaneFooter","bindCenterPaneBody","_centerPaneBody","handleResize","scrollTop","scrollLeft","update","handleScroll","target","window","cancelAnimationFrame","_animationFrame","requestAnimationFrame","handleWheel","isScrolling","preventDefault","handleColumnResizeStart","column","width","_resizingColumn","invalidateSizes","refresh","handleColumnResize","_pinnedColumnWidths","Math","min","max","handleColumnResizeEnd","handleRowResizeStart","row","height","_resizingRow","handleRowResize","_pinnedRowHeights","handleRowResizeEnd","force","calculateRowHeight","rowHeight","calculateColumnWidth","columnWidth","_sizeDetector","strategy","state","componentDidMount","listenTo","addEventListener","componentWillUnmount","uninstall","removeEventListener","render","styles","contentStyle","scrollContent","scrollableWidth","scrollableHeight","container","gridBody","renderLeftPane","renderRightPane","renderCenterPane","renderColumnResizeGuide","renderRowResizeGuide","scrollOverlay","scrollContainer","attrs","pane","bottom","fixedLeftColumnsWidth","renderLeftPaneHeader","renderLeftPaneFooter","renderLeftPaneBody","cells","fixedLeftColumnCount","right","fixedHeadersHeight","leftPaneHeaderContent","renderCellRange","fixedHeaderCount","topLeftRows","topLeftColumns","fixedFooterCount","fixedFootersHeight","fromRow","rowCount","toRow","leftPaneFooterContent","bottomLeftRows","bottomLeftColumns","estimatedColumnWidth","estimatedRowHeight","translatedPane","leftRows","length","leftPaneBodyContent","leftColumns","fixedRightColumnCount","fixedRightColumnsWidth","renderRightPaneHeader","renderRightPaneFooter","renderRightPaneBody","fromColumn","columnCount","toColumn","rightPaneHeaderContent","topRightRows","topRightColumns","rightPaneFooterContent","bottomRightRows","bottomRightColumns","rightPaneBodyContent","rightRows","rightColumns","renderCenterPaneHeader","renderCenterPaneFooter","renderCenterPaneBody","overflow","topColumns","centerPaneHeaderContent","topRows","bottomColumns","bottomRows","rows","columns","centerPaneBodyContent","find","cell","guideStyle","columnResizeGuide","rowResizeGuide","el","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","scrollbarSize","offsetWidth","offsetHeight","clearTimeout","_disableScrollableAreaPointerEventsDelay","style","pointerEvents","setTimeout","disableScrollableAreaPointerEventsNow","calculator","invalidate","preloadPixelsX","preloadPixelsY","bounds","clientWidth","clientHeight","cellsWithinBounds","changed","onExtentsChange","setState","setScroll","childNodes","renderCell","rowData","columnData","push","lastColumn","lastRow","lastTopLeftRow","topOffset","lastBottomRow","lastBottomRowTop","lastOffset","_scrollbarSize","_calculator","Component","propTypes","PropTypes","number","isRequired","oneOfType","func","defaultProps","WebkitOverflowScrolling","backgroundColor","cursor","borderRadius"],"mappings":"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","file":"grid.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport GridCalculator from './grid-calculator';\nimport elementResizeDetector from 'element-resize-detector';\n\nconst POINTER_EVENTS_SCROLL_DELAY = 200;\n\nexport default class Grid extends React.Component {\n  static propTypes = {\n    preloadPixelsX: React.PropTypes.number,\n\n    preloadPixelsY: React.PropTypes.number,\n\n    estimatedRowHeight: React.PropTypes.number,\n\n    estimatedColumnWidth: React.PropTypes.number,\n\n    columnCount: React.PropTypes.number.isRequired,\n\n    rowCount: React.PropTypes.number.isRequired,\n\n    fixedLeftColumnCount: React.PropTypes.number,\n\n    fixedRightColumnCount: React.PropTypes.number,\n\n    fixedHeaderCount: React.PropTypes.number,\n\n    fixedFooterCount: React.PropTypes.number,\n\n    columnWidth: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    rowHeight: React.PropTypes.oneOfType([ React.PropTypes.number, React.PropTypes.func ]),\n\n    renderCell: React.PropTypes.func,\n\n    onExtentsChange: React.PropTypes.func\n  };\n\n  static defaultProps = {\n    preloadPixelsX: 0,\n    preloadPixelsY: 0,\n    fixedLeftColumnCount: 0,\n    fixedRightColumnCount: 0,\n    fixedHeaderCount: 0,\n    fixedFooterCount: 0,\n    estimatedColumnWidth: 130,\n    estimatedRowHeight: 30\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._pinnedColumnWidths = {};\n    this._pinnedRowHeights = {};\n\n    this._sizeDetector = elementResizeDetector({strategy: 'scroll'});\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._sizeDetector.listenTo(this._root, this.handleResize);\n    this._scrollInner.addEventListener('scroll', this.handleScroll);\n    this._root.addEventListener('wheel', this.handleWheel);\n\n    this.update(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._sizeDetector.uninstall(this._root);\n    this._scrollInner.removeEventListener('scroll', this.handleScroll);\n    this._root.removeEventListener('wheel', this.handleWheel);\n  }\n\n  render() {\n    const {styles} = Grid;\n\n    const contentStyle = {\n      ...styles.scrollContent,\n      width: this.scrollableWidth,\n      height: this.scrollableHeight\n    };\n\n    return (\n      <div style={styles.container}\n           ref={this.bindRoot}\n           onMouseMove={this.handleRootMouseMove}>\n        <div style={styles.gridBody}>\n          {this.renderLeftPane()}\n          {this.renderRightPane()}\n          {this.renderCenterPane()}\n          {this.renderColumnResizeGuide()}\n          {this.renderRowResizeGuide()}\n        </div>\n        <div style={styles.scrollOverlay}\n             ref={this.bindScrollOverlay}>\n          <div style={styles.scrollContainer}\n               ref={this.bindScrollInner}>\n            <div className={cx('scroll-container', styles.scrollContent)}\n                 style={contentStyle} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: this.fixedLeftColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindLeftPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderLeftPaneHeader()}\n        {this.renderLeftPaneFooter()}\n        {this.renderLeftPaneBody()}\n      </div>\n    );\n  }\n\n  renderLeftPaneHeader() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    return (\n      <div ref={this.bindLeftPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.topLeftRows, this.state.cells.topLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneFooter() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindLeftPaneFooter}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneFooterContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.bottomLeftRows, this.state.cells.bottomLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneBody() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindLeftPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.leftPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.leftRows, this.state.cells.leftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPane() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      width: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindRightPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderRightPaneHeader()}\n        {this.renderRightPaneFooter()}\n        {this.renderRightPaneBody()}\n      </div>\n    );\n  }\n\n  renderRightPaneHeader() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRightRows, this.state.cells.topRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneFooter() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneFooter}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneFooterContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRightRows, this.state.cells.bottomRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneBody() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      top: -this.fixedHeadersHeight,\n      bottom: -this.fixedFootersHeight,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindRightPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.rightPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rightRows, this.state.cells.rightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: this.fixedLeftColumnsWidth,\n      top: 0,\n      bottom: 0,\n      right: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindCenterPane}\n           className={cx()}\n           style={attrs}>\n        {this.renderCenterPaneHeader()}\n        {this.renderCenterPaneFooter()}\n        {this.renderCenterPaneBody()}\n      </div>\n    );\n  }\n\n  renderCenterPaneHeader() {\n    if (!this.state.cells || this.props.fixedHeaderCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.fixedHeadersHeight,\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[0][0] : null;\n    const toColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[this.state.cells.topColumns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneHeader}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRows, this.state.cells.topColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneFooter() {\n    if (!this.state.cells || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.fixedFootersHeight,\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[0][0] : null;\n    const toColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[this.state.cells.bottomColumns.length - 1][0] : null;\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindCenterPaneFooter}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRows, this.state.cells.bottomColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneBody() {\n    if (!this.state.cells) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.fixedHeadersHeight,\n      right: 0,\n      bottom: this.fixedFootersHeight\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      left: -this.fixedLeftColumnsWidth,\n      top: -this.fixedHeadersHeight,\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.rows.length ? this.state.cells.rows[0][0] : null;\n    const toRow = this.state.cells.rows.length ? this.state.cells.rows[this.state.cells.rows.length - 1][0] : null;\n\n    const fromColumn = this.state.cells.columns.length ? this.state.cells.columns[0][0] : null;\n    const toColumn = this.state.cells.columns.length ? this.state.cells.columns[this.state.cells.columns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneBody}\n           className={cx()}\n           style={attrs}>\n        <div className={cx(styles.centerPaneBodyContent)}\n             style={contentStyle}>\n          {this.renderCellRange(fromRow, toRow, fromColumn, toColumn, this.state.cells.rows, this.state.cells.columns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderColumnResizeGuide() {\n    if (this._resizingColumn == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const column = this.state.cells.columns.find((cell) => {\n      return cell[0] === this._resizingColumn;\n    });\n\n    const guideStyle = {\n      ...styles.columnResizeGuide,\n      left: -this._scrollInner.scrollLeft + column[1] + column[2] - 2\n    };\n\n    return (\n      <div style={guideStyle} />\n    );\n  }\n\n  renderRowResizeGuide() {\n    if (this._resizingRow == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const row = this.state.cells.rows.find((cell) => {\n      return cell[0] === this._resizingRow;\n    });\n\n    const guideStyle = {\n      ...styles.rowResizeGuide,\n      top: -this._scrollInner.scrollTop + row[1] + row[2] - 2\n    };\n\n    return (\n      <div style={guideStyle} />\n    );\n  }\n\n  get scrollableWidth() {\n    if (!this.state.cells || !this.state.cells.columns.length) {\n      return this.props.estimatedColumnWidth * this.props.columnCount;\n    }\n\n    const lastColumn = this.state.cells.columns[this.state.cells.columns.length - 1];\n    const width = lastColumn[1] + lastColumn[2];\n\n    return width + (((this.props.columnCount - 1) - lastColumn[0]) * this.props.estimatedColumnWidth);\n  }\n\n  get scrollableHeight() {\n    if (!this.state.cells || !this.state.cells.rows.length) {\n      return this.props.estimatedRowHeight * this.props.rowCount;\n    }\n\n    const lastRow = this.state.cells.rows[this.state.cells.rows.length - 1];\n    const height = lastRow[1] + lastRow[2];\n\n    return height + (((this.props.rowCount - 1) - lastRow[0]) * this.props.estimatedRowHeight);\n  }\n\n  get fixedHeadersHeight() {\n    if (!this.state.cells || !this.state.cells.topLeftRows.length) {\n      return 0;\n    }\n\n    const lastTopLeftRow = this.state.cells.topLeftRows[this.state.cells.topLeftRows.length - 1];\n    const topOffset = lastTopLeftRow[1] + lastTopLeftRow[2];\n\n    return topOffset;\n  }\n\n  get fixedFootersHeight() {\n    if (!this.state.cells || !this.state.cells.bottomLeftRows.length) {\n      return 0;\n    }\n\n    const lastBottomRow = this.state.cells.bottomLeftRows[this.state.cells.bottomLeftRows.length - 1];\n    const lastBottomRowTop = lastBottomRow[1] + lastBottomRow[2];\n\n    return lastBottomRowTop;\n  }\n\n  get fixedRightColumnsWidth() {\n    if (!this.state.cells || this.state.cells.rightColumns.length === 0) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.rightColumns[this.state.cells.rightColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get fixedLeftColumnsWidth() {\n    if (!this.state.cells || !this.state.cells.leftColumns.length) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.leftColumns[this.state.cells.leftColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get scrollbarSize() {\n    if (this._scrollbarSize == null) {\n      this._scrollbarSize = Math.max(15, this._scrollInner.offsetHeight - this._scrollInner.clientHeight);\n    }\n\n    return this._scrollbarSize;\n  }\n\n  elementPosition(el) {\n    let x = 0;\n    let y = 0;\n\n    while (el) {\n      x += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n      y += (el.offsetTop - el.scrollTop + el.clientTop);\n      el = el.offsetParent;\n    }\n\n    return { left: x, top: y };\n  }\n\n  isOverScrollbar(x, y) {\n    const scrollbarSize = this.scrollbarSize;\n\n    return (x >= this._root.offsetWidth - scrollbarSize) ||\n           (y >= this._root.offsetHeight - scrollbarSize);\n  }\n\n  handleRootMouseMove = (event) => {\n    const position = this.elementPosition(event.currentTarget);\n\n    const x = event.clientX - position.left;\n    const y = event.clientY - position.top;\n\n    const isOverScrollbar = this.isOverScrollbar(x, y);\n\n    // when the mouse moves between the 2 regions, swap the pointer events\n    if (this._isOverScrollbar !== isOverScrollbar) {\n      if (isOverScrollbar) {\n        // when over the scrollbar area, enable the pointer events on the scroll area\n        this.enableScrollableAreaPointerEvents();\n      } else {\n        // when over the grid area, disable the pointer events on the scroll area so the cells are interactive\n        this.disableScrollableAreaPointerEventsSoon();\n      }\n    }\n\n    this._isOverScrollbar = isOverScrollbar;\n  }\n\n  enableScrollableAreaPointerEvents() {\n    clearTimeout(this._disableScrollableAreaPointerEventsDelay);\n    this._disableScrollableAreaPointerEventsDelay = null;\n\n    this._scrollOverlay.style.pointerEvents = 'auto';\n  }\n\n  disableScrollableAreaPointerEventsSoon() {\n    clearTimeout(this._disableScrollableAreaPointerEventsDelay);\n\n    this._disableScrollableAreaPointerEventsDelay = setTimeout(() => {\n      this._disableScrollableAreaPointerEventsDelay = null;\n\n      if (!this._isOverScrollbar) {\n        this.disableScrollableAreaPointerEventsNow();\n      }\n    }, POINTER_EVENTS_SCROLL_DELAY);\n  }\n\n  get isScrolling() {\n    return this._disableScrollableAreaPointerEventsDelay != null;\n  }\n\n  disableScrollableAreaPointerEventsNow() {\n    this._scrollOverlay.style.pointerEvents = 'none';\n  }\n\n  bindRoot = (node) => {\n    this._root = node;\n  }\n\n  bindScrollOverlay = (node) => {\n    this._scrollOverlay = node;\n  }\n\n  bindScrollInner = (node) => {\n    this._scrollInner = node;\n  }\n\n  bindLeftPane = (node) => {\n    this._leftPane = node;\n  }\n\n  bindLeftPaneHeader = (node) => {\n    this._leftPaneHeader = node;\n  }\n\n  bindLeftPaneFooter = (node) => {\n    this._leftPaneFooter = node;\n  }\n\n  bindLeftPaneBody = (node) => {\n    this._leftPaneBody = node;\n  }\n\n  bindRightPane = (node) => {\n    this._rightPane = node;\n  }\n\n  bindRightPaneHeader = (node) => {\n    this._rightPaneHeader = node;\n  }\n\n  bindRightPaneFooter = (node) => {\n    this._rightPaneFooter = node;\n  }\n\n  bindRightPaneBody = (node) => {\n    this._rightPaneBody = node;\n  }\n\n  bindCenterPane = (node) => {\n    this._centerPane = node;\n  }\n\n  bindCenterPaneHeader = (node) => {\n    this._centerPaneHeader = node;\n  }\n\n  bindCenterPaneFooter = (node) => {\n    this._centerPaneFooter = node;\n  }\n\n  bindCenterPaneBody = (node) => {\n    this._centerPaneBody = node;\n  }\n\n  handleResize = (event) => {\n    const {scrollTop, scrollLeft} = this._scrollInner;\n\n    this.update(scrollTop, scrollLeft);\n  }\n\n  handleScroll = (event) => {\n    const {scrollTop, scrollLeft} = event.target;\n\n    window.cancelAnimationFrame(this._animationFrame);\n\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this.update(scrollTop, scrollLeft);\n    });\n  }\n\n  handleWheel = (event) => {\n    if (!this.isScrolling) {\n      this.enableScrollableAreaPointerEvents();\n      event.preventDefault();\n    }\n\n    this.disableScrollableAreaPointerEventsSoon();\n  }\n\n  handleColumnResizeStart = (column, width) => {\n    this._resizingColumn = column;\n\n    // this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResize = (column, width) => {\n    this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResizeEnd = () => {\n    this._resizingColumn = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeStart = (row, height) => {\n    this._resizingRow = row;\n\n    // this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResize = (row, height) => {\n    this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeEnd = () => {\n    this._resizingRow = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  invalidateSizes() {\n    this.calculator.invalidate();\n  }\n\n  refresh = (force) => {\n    const {scrollTop, scrollLeft} = this._scrollInner;\n\n    this.update(scrollTop, scrollLeft, force);\n  }\n\n  update(scrollTop, scrollLeft, force) {\n    const x = scrollLeft - this.props.preloadPixelsX;\n    const y = scrollTop - this.props.preloadPixelsY;\n\n    const bounds = {\n      left: Math.max(0, x),\n      top: Math.max(0, y),\n      width: this._root.clientWidth + (2 * this.props.preloadPixelsX) + (x < 0 ? x : 0),\n      height: this._root.clientHeight + (2 * this.props.preloadPixelsY) + (y < 0 ? y : 0)\n    };\n\n    const cells = this.calculator.cellsWithinBounds(bounds, this.props.rowCount, this.props.columnCount);\n\n    if (cells.changed || force) {\n      const fromRow = cells.rows.length ? cells.rows[0][0] : null;\n      const toRow = cells.rows.length ? cells.rows[cells.rows.length - 1][0] : null;\n      const fromColumn = cells.columns.length ? cells.columns[0][0] : null;\n      const toColumn = cells.columns.length ? cells.columns[cells.columns.length - 1][0] : null;\n\n      if (this.props.onExtentsChange) {\n        this.props.onExtentsChange(fromRow, toRow, fromColumn, toColumn);\n      }\n\n      this.setState({cells: cells});\n    }\n\n    if (this.state.cells) {\n      this.setScroll(scrollLeft, scrollTop);\n    }\n  }\n\n  setScroll(x, y) {\n    if (this._leftPaneBody) {\n      this._leftPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._rightPaneBody) {\n      this._rightPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    }\n\n    if (this._centerPaneHeader) {\n      this._centerPaneHeader.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneFooter) {\n      this._centerPaneFooter.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    this._centerPaneBody.childNodes[0].style.top = (-y - this.fixedHeadersHeight) + 'px';\n    this._centerPaneBody.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n  }\n\n  get calculator() {\n    if (!this._calculator) {\n      this._calculator = new GridCalculator();\n      this._calculator.estimatedColumnWidth = this.props.estimatedColumnWidth;\n      this._calculator.estimatedRowHeight = this.props.estimatedRowHeight;\n      this._calculator.fixedLeftColumnCount = this.props.fixedLeftColumnCount;\n      this._calculator.fixedRightColumnCount = this.props.fixedRightColumnCount;\n      this._calculator.fixedHeaderCount = this.props.fixedHeaderCount;\n      this._calculator.fixedFooterCount = this.props.fixedFooterCount;\n      this._calculator.calculateRowHeight = this.calculateRowHeight;\n      this._calculator.calculateColumnWidth = this.calculateColumnWidth;\n    }\n\n    return this._calculator;\n  }\n\n  calculateRowHeight = (row) => {\n    if (this._pinnedRowHeights[row] != null) {\n      return this._pinnedRowHeights[row];\n    }\n\n    return this.props.rowHeight(row);\n  }\n\n  calculateColumnWidth = (column) => {\n    if (this._pinnedColumnWidths[column] != null) {\n      return this._pinnedColumnWidths[column];\n    }\n\n    return this.props.columnWidth(column);\n  }\n\n  renderCellRange(fromRow, toRow, fromColumn, toColumn, rows, columns) {\n    const cells = [];\n\n    const render = this.props.renderCell;\n\n    for (let row = toRow; row >= fromRow; --row) {\n      for (let column = toColumn; column >= fromColumn; --column) {\n        const rowData = rows[row - fromRow];\n        const columnData = columns[column - fromColumn];\n\n        cells.push(render(row, rowData, column, columnData, this));\n      }\n    }\n\n    return cells;\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  scrollOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden',\n    pointerEvents: 'none'\n  },\n\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'scroll',\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  gridBody: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  pane: {\n    position: 'absolute',\n    overflow: 'hidden'\n  },\n\n  translatedPane: {\n  },\n\n  columnResizeGuide: {\n    position: 'absolute',\n    top: 1,\n    bottom: 0,\n    width: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ew-resize',\n    borderRadius: 0\n  },\n\n  rowResizeGuide: {\n    position: 'absolute',\n    left: 1,\n    right: 0,\n    height: 4,\n    backgroundColor: '#18a3f7',\n    cursor: 'ns-resize',\n    borderRadius: 0\n  }\n};\n\nGrid.styles = styles;\n"]}